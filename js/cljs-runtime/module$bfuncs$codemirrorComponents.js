shadow$provide.module$bfuncs$codemirrorComponents=function(global,require,module,exports){function _createForOfIteratorHelper(o,allowArrayLike){var it="undefined"!==typeof Symbol&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"===typeof o.length){it&&(o=it);var i=0;allowArrayLike=function(){};return{s:allowArrayLike,n:function(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function(_e){throw _e;},f:allowArrayLike}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}var normalCompletion=!0,didErr=!1,err;return{s:function(){it=it.call(o)},n:function(){var step=it.next();normalCompletion=step.done;return step},e:function(_e2){didErr=!0;err=_e2},f:function(){try{if(!normalCompletion&&null!=it["return"])it["return"]()}finally{if(didErr)throw err;}}}}function _toConsumableArray(arr){var JSCompiler_temp=Array.isArray(arr)?_arrayLikeToArray(arr):void 0;JSCompiler_temp||(JSCompiler_temp="undefined"!==typeof Symbol&&null!=arr[Symbol.iterator]||null!=arr["@@iterator"]?
Array.from(arr):void 0);if(!(arr=JSCompiler_temp||_unsupportedIterableToArray(arr)))throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");return arr}function _unsupportedIterableToArray(o,minLen){if(o){if("string"===typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);
if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}}function _arrayLikeToArray(arr,len){if(null==len||len>arr.length)len=arr.length;for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function getParseData(state,hVar){var hVarRanges=new _rangeset.RangeSetBuilder,errRanges=new _rangeset.RangeSetBuilder,vars=new Set,stack=[],errors=[];(0,_language.syntaxTree)(state).iterate({enter:function(nt,from,to){if(nt.isError)nt=state.sliceDoc(from,
to),from===to?errRanges.add(from,to+1,zeroWidthErrMark):errRanges.add(from,to,errMark),errors.push({from,to,text:nt}),stack.push(["ERROR"]);else if(nt.is("str"))"var"===nt.name?(nt=state.sliceDoc(from,to),stack.push(["var",nt]),vars.add(nt),nt===hVar&&hVarRanges.add(from,to,varMark)):stack.push([nt.name]);else return!1},leave:function(){var secondLast=stack[stack.length-2];secondLast&&secondLast.push(stack.pop())}});return{hVar,hVarMarks:hVarRanges.finish(),parse:stack.pop(),vars:_toConsumableArray(vars).sort(),
errors:0<errors.length?errors:null,errMarks:errRanges.finish()}}Object.defineProperty(exports,"__esModule",{value:!0});exports.createEditor=function(onParse,doc){var parse=function(state,hVar){hVar=getParseData(state,hVar);onParse({parse:hVar.parse,vars:hVar.vars,errors:hVar.errors,text:state.doc.toString()});return hVar},markVariable=_state.StateEffect.define(),markErrors=_state.StateEffect.define(),parseField=_state.StateField.define({create:function(state){return parse(state,null)},update:function(prevData,
tr){var _iterator=_createForOfIteratorHelper(tr.effects),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var e=_step.value;if(e.is(markVariable))return parse(tr.state,e.value)}}catch(err){_iterator.e(err)}finally{_iterator.f()}return tr.docChanged?parse(tr.state,prevData.hVar):prevData}}),showErrors=_state.StateField.define({create:function(){return!1},update:function(value,tr){tr=_createForOfIteratorHelper(tr.effects);var _step2;try{for(tr.s();!(_step2=tr.n()).done;){var e=_step2.value;
if(e.is(markErrors))return e.value}}catch(err){tr.e(err)}finally{tr.f()}return value}}),view=new _view.EditorView({state:_state.EditorState.create({extensions:[new _language.LanguageSupport(bexprLanguage),parseField,showErrors,_view.EditorView.lineWrapping,_view.EditorView.decorations.compute([parseField,showErrors],function(state){return state.field(showErrors)?state.field(parseField).errMarks:_view.Decoration.none}),_view.EditorView.decorations.from(parseField,function(data){return data.hVarMarks}),
(0,_view.drawSelection)(),hstyle.extension,_highlight.classHighlightStyle.extension,(0,_matchbrackets.bracketMatching)()],doc})});return[function(showErrors,markedVar){view.dispatch({effects:[markErrors.of(showErrors),markVariable.of(markedVar)]})},view]};var _state=require("module$node_modules$$codemirror$state$dist$index_cjs"),_view=require("module$node_modules$$codemirror$view$dist$index_cjs"),_rangeset=require("module$node_modules$$codemirror$rangeset$dist$index_cjs"),_matchbrackets=require("module$node_modules$$codemirror$matchbrackets$dist$index_cjs"),
_highlight=require("module$node_modules$$codemirror$highlight$dist$index_cjs"),_language=require("module$node_modules$$codemirror$language$dist$index_cjs");global=require("module$bfuncs$bexprParser");var varMark=_view.Decoration.mark({"class":"cm-markedVar"}),errMark=_view.Decoration.mark({"class":"cm-parseError"}),zeroWidthErrMark=_view.Decoration.mark({"class":"cm-zeroWidthParseError"}),hstyle=_highlight.HighlightStyle.define([{tag:_highlight.tags.compareOperator,"class":"cmt-rel-op"},{tag:_highlight.tags.operatorKeyword,
"class":"cmt-operator-keyword cmt-operator"},{tag:_highlight.tags.logicOperator,"class":"cmt-log-op"},{tag:_highlight.tags.special(_highlight.tags.logicOperator),"class":"cmt-negated"}]),bexprLanguage=_language.LezerLanguage.define({parser:global.parser.configure({props:[(0,_highlight.styleTags)({lit:_highlight.tags.bool,litKey:[_highlight.tags.keyword,_highlight.tags.bool],log:_highlight.tags.logicOperator,logKey:[_highlight.tags.operatorKeyword,_highlight.tags.logicOperator],rel:_highlight.tags.compareOperator,
relKey:[_highlight.tags.operatorKeyword,_highlight.tags.compareOperator],not:_highlight.tags.special(_highlight.tags.logicOperator),notKey:[_highlight.tags.operatorKeyword,_highlight.tags.special(_highlight.tags.logicOperator)],"var":_highlight.tags.variableName,neg:_highlight.tags.special(_highlight.tags.logicOperator)})]})})}
//# sourceMappingURL=module$bfuncs$codemirrorComponents.js.map
