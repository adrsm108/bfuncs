{
"version":3,
"file":"module$node_modules$react_redux$lib$hooks$useReduxContext.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAe,yDAAf,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGtHA,OAAA,CAAQC,UAAR,CAAqB,CAAA,CACrBD,QAAA,CAAQE,eAAR,CAsBAA,QAAwB,EAAG,CACzB,IAAIC,aAAe,CAAC,CAAA,CAAGC,MAAH,CAAUC,UAAX,EAAuBC,QAAvB,CAAgCC,iBAAhC,CAEnB,IAA6C,CAACJ,YAA9C,CACE,KAAUK,MAAJ,CAAU,wGAAV,CAAN,CAGF,MAAOL,aAPkB,CApB3B,KAAIC,OAASN,OAAA,CAAQ,iCAAR,CAAb,CAEIQ,SAAWR,OAAA,CAAQ,wDAAR,CARuG;",
"sources":["node_modules/react-redux/lib/hooks/useReduxContext.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_redux$lib$hooks$useReduxContext\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.useReduxContext = useReduxContext;\n\nvar _react = require(\"react\");\n\nvar _Context = require(\"../components/Context\");\n\n/**\r\n * A hook to access the value of the `ReactReduxContext`. This is a low-level\r\n * hook that you should usually not need to call directly.\r\n *\r\n * @returns {any} the value of the `ReactReduxContext`\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useReduxContext } from 'react-redux'\r\n *\r\n * export const CounterComponent = ({ value }) => {\r\n *   const { store } = useReduxContext()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */\nfunction useReduxContext() {\n  var contextValue = (0, _react.useContext)(_Context.ReactReduxContext);\n\n  if (process.env.NODE_ENV !== 'production' && !contextValue) {\n    throw new Error('could not find react-redux context value; please ensure the component is wrapped in a <Provider>');\n  }\n\n  return contextValue;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","__esModule","useReduxContext","contextValue","_react","useContext","_Context","ReactReduxContext","Error"]
}
