shadow$provide.module$node_modules$color$index=function(global,require,module,exports){function Color(obj,model){if(!(this instanceof Color))return new Color(obj,model);model&&model in skippedModels&&(model=null);if(model&&!(model in convert))throw Error("Unknown model: "+model);if(null==obj)this.model="rgb",this.color=[0,0,0],this.valpha=1;else if(obj instanceof Color)this.model=obj.model,this.color=obj.color.slice(),this.valpha=obj.valpha;else if("string"===typeof obj){model=colorString.get(obj);
if(null===model)throw Error("Unable to parse color from string: "+obj);this.model=model.model;var channels=convert[this.model].channels;this.color=model.value.slice(0,channels);this.valpha="number"===typeof model.value[channels]?model.value[channels]:1}else if(obj.length)this.model=model||"rgb",channels=convert[this.model].channels,model=_slice.call(obj,0,channels),this.color=zeroArray(model,channels),this.valpha="number"===typeof obj[channels]?obj[channels]:1;else if("number"===typeof obj)obj&=16777215,
this.model="rgb",this.color=[obj>>16&255,obj>>8&255,obj&255],this.valpha=1;else{this.valpha=1;model=Object.keys(obj);"alpha"in obj&&(model.splice(model.indexOf("alpha"),1),this.valpha="number"===typeof obj.alpha?obj.alpha:0);model=model.sort().join("");if(!(model in hashedModelKeys))throw Error("Unable to parse color from object: "+JSON.stringify(obj));this.model=hashedModelKeys[model];channels=convert[this.model].labels;var color=[];for(model=0;model<channels.length;model++)color.push(obj[channels[model]]);
this.color=zeroArray(color)}if(limiters[this.model])for(channels=convert[this.model].channels,model=0;model<channels;model++)(obj=limiters[this.model][model])&&(this.color[model]=obj(this.color[model]));this.valpha=Math.max(0,Math.min(1,this.valpha));Object.freeze&&Object.freeze(this)}function roundToPlace(places){return function(num){return Number(num.toFixed(places))}}function getset(model,channel,modifier){model=Array.isArray(model)?model:[model];model.forEach(function(m){(limiters[m]||(limiters[m]=
[]))[channel]=modifier});model=model[0];return function(val){if(arguments.length){modifier&&(val=modifier(val));var result=this[model]();result.color[channel]=val;return result}result=this[model]().color[channel];modifier&&(result=modifier(result));return result}}function maxfn(max){return function(v){return Math.max(0,Math.min(max,v))}}function zeroArray(arr,length){for(var i=0;i<length;i++)"number"!==typeof arr[i]&&(arr[i]=0);return arr}var colorString=require("module$node_modules$color_string$index"),
convert=require("module$node_modules$color_convert$index"),_slice=[].slice,skippedModels=["keyword","gray","hex"],hashedModelKeys={};Object.keys(convert).forEach(function(model){hashedModelKeys[_slice.call(convert[model].labels).sort().join("")]=model});var limiters={};Color.prototype={toString:function(){return this.string()},toJSON:function(){return this[this.model]()},string:function(places){var self=this.model in colorString.to?this:this.rgb();self=self.round("number"===typeof places?places:1);
places=1===self.valpha?self.color:self.color.concat(this.valpha);return colorString.to[self.model](places)},percentString:function(places){places=this.rgb().round("number"===typeof places?places:1);places=1===places.valpha?places.color:places.color.concat(this.valpha);return colorString.to.rgb.percent(places)},array:function(){return 1===this.valpha?this.color.slice():this.color.concat(this.valpha)},object:function(){for(var result={},channels=convert[this.model].channels,labels=convert[this.model].labels,
i=0;i<channels;i++)result[labels[i]]=this.color[i];1!==this.valpha&&(result.alpha=this.valpha);return result},unitArray:function(){var rgb=this.rgb().color;rgb[0]/=255;rgb[1]/=255;rgb[2]/=255;1!==this.valpha&&rgb.push(this.valpha);return rgb},unitObject:function(){var rgb=this.rgb().object();rgb.r/=255;rgb.g/=255;rgb.b/=255;1!==this.valpha&&(rgb.alpha=this.valpha);return rgb},round:function(places){places=Math.max(places||0,0);return new Color(this.color.map(roundToPlace(places)).concat(this.valpha),
this.model)},alpha:function(val){return arguments.length?new Color(this.color.concat(Math.max(0,Math.min(1,val))),this.model):this.valpha},red:getset("rgb",0,maxfn(255)),green:getset("rgb",1,maxfn(255)),blue:getset("rgb",2,maxfn(255)),hue:getset(["hsl","hsv","hsl","hwb","hcg"],0,function(val){return(val%360+360)%360}),saturationl:getset("hsl",1,maxfn(100)),lightness:getset("hsl",2,maxfn(100)),saturationv:getset("hsv",1,maxfn(100)),value:getset("hsv",2,maxfn(100)),chroma:getset("hcg",1,maxfn(100)),
gray:getset("hcg",2,maxfn(100)),white:getset("hwb",1,maxfn(100)),wblack:getset("hwb",2,maxfn(100)),cyan:getset("cmyk",0,maxfn(100)),magenta:getset("cmyk",1,maxfn(100)),yellow:getset("cmyk",2,maxfn(100)),black:getset("cmyk",3,maxfn(100)),x:getset("xyz",0,maxfn(100)),y:getset("xyz",1,maxfn(100)),z:getset("xyz",2,maxfn(100)),l:getset("lab",0,maxfn(100)),a:getset("lab",1),b:getset("lab",2),keyword:function(val){return arguments.length?new Color(val):convert[this.model].keyword(this.color)},hex:function(val){return arguments.length?
new Color(val):colorString.to.hex(this.rgb().round().color)},rgbNumber:function(){var rgb=this.rgb().color;return(rgb[0]&255)<<16|(rgb[1]&255)<<8|rgb[2]&255},luminosity:function(){for(var rgb=this.rgb().color,lum=[],i=0;i<rgb.length;i++){var chan=rgb[i]/255;lum[i]=.03928>=chan?chan/12.92:Math.pow((chan+.055)/1.055,2.4)}return.2126*lum[0]+.7152*lum[1]+.0722*lum[2]},contrast:function(color2){var lum1=this.luminosity();color2=color2.luminosity();return lum1>color2?(lum1+.05)/(color2+.05):(color2+.05)/
(lum1+.05)},level:function(color2){color2=this.contrast(color2);return 7.1<=color2?"AAA":4.5<=color2?"AA":""},isDark:function(){var rgb=this.rgb().color;return 128>(299*rgb[0]+587*rgb[1]+114*rgb[2])/1E3},isLight:function(){return!this.isDark()},negate:function(){for(var rgb=this.rgb(),i=0;3>i;i++)rgb.color[i]=255-rgb.color[i];return rgb},lighten:function(ratio){var hsl=this.hsl();hsl.color[2]+=hsl.color[2]*ratio;return hsl},darken:function(ratio){var hsl=this.hsl();hsl.color[2]-=hsl.color[2]*ratio;
return hsl},saturate:function(ratio){var hsl=this.hsl();hsl.color[1]+=hsl.color[1]*ratio;return hsl},desaturate:function(ratio){var hsl=this.hsl();hsl.color[1]-=hsl.color[1]*ratio;return hsl},whiten:function(ratio){var hwb=this.hwb();hwb.color[1]+=hwb.color[1]*ratio;return hwb},blacken:function(ratio){var hwb=this.hwb();hwb.color[2]+=hwb.color[2]*ratio;return hwb},grayscale:function(){var rgb=this.rgb().color;rgb=.3*rgb[0]+.59*rgb[1]+.11*rgb[2];return Color.rgb(rgb,rgb,rgb)},fade:function(ratio){return this.alpha(this.valpha-
this.valpha*ratio)},opaquer:function(ratio){return this.alpha(this.valpha+this.valpha*ratio)},rotate:function(degrees){var hsl=this.hsl(),hue=hsl.color[0];hue=(hue+degrees)%360;hsl.color[0]=0>hue?360+hue:hue;return hsl},mix:function(mixinColor,weight){if(!mixinColor||!mixinColor.rgb)throw Error('Argument to "mix" was not a Color instance, but rather an instance of '+typeof mixinColor);mixinColor=mixinColor.rgb();var color2=this.rgb();weight=void 0===weight?.5:weight;var w=2*weight-1,a=mixinColor.alpha()-
color2.alpha();w=((-1===w*a?w:(w+a)/(1+w*a))+1)/2;a=1-w;return Color.rgb(w*mixinColor.red()+a*color2.red(),w*mixinColor.green()+a*color2.green(),w*mixinColor.blue()+a*color2.blue(),mixinColor.alpha()*weight+color2.alpha()*(1-weight))}};Object.keys(convert).forEach(function(model){if(-1===skippedModels.indexOf(model)){var channels=convert[model].channels;Color.prototype[model]=function(){if(this.model===model)return new Color(this);if(arguments.length)return new Color(arguments,model);var newAlpha=
"number"===typeof arguments[channels]?channels:this.valpha;var JSCompiler_inline_result=convert[this.model][model].raw(this.color);JSCompiler_inline_result=Array.isArray(JSCompiler_inline_result)?JSCompiler_inline_result:[JSCompiler_inline_result];return new Color(JSCompiler_inline_result.concat(newAlpha),model)};Color[model]=function(color){"number"===typeof color&&(color=zeroArray(_slice.call(arguments),channels));return new Color(color,model)}}});module.exports=Color}
//# sourceMappingURL=module$node_modules$color$index.js.map
