shadow$provide.module$node_modules$react_redux$lib$hooks$useSelector=function(global,require,module,exports){function useSelectorWithStoreAndSubscription(selector,equalityFn,store,contextSub){var forceRender=(0,_react.useReducer)(function(s){return s+1},0)[1],subscription=(0,_react.useMemo)(function(){return new _Subscription["default"](store,contextSub)},[store,contextSub]),latestSubscriptionCallbackError=(0,_react.useRef)(),latestSelector=(0,_react.useRef)(),latestStoreState=(0,_react.useRef)(),
latestSelectedState=(0,_react.useRef)(),storeState=store.getState();try{if(selector!==latestSelector.current||storeState!==latestStoreState.current||latestSubscriptionCallbackError.current){var newSelectedState=selector(storeState);var selectedState=void 0!==latestSelectedState.current&&equalityFn(newSelectedState,latestSelectedState.current)?latestSelectedState.current:newSelectedState}else selectedState=latestSelectedState.current}catch(err){throw latestSubscriptionCallbackError.current&&(err.message+=
"\nThe error may be correlated with this previous error:\n"+latestSubscriptionCallbackError.current.stack+"\n\n"),err;}(0,_useIsomorphicLayoutEffect.useIsomorphicLayoutEffect)(function(){latestSelector.current=selector;latestStoreState.current=storeState;latestSelectedState.current=selectedState;latestSubscriptionCallbackError.current=void 0});(0,_useIsomorphicLayoutEffect.useIsomorphicLayoutEffect)(function(){function checkForUpdates(){try{var newStoreState=store.getState(),_newSelectedState=latestSelector.current(newStoreState);
if(equalityFn(_newSelectedState,latestSelectedState.current))return;latestSelectedState.current=_newSelectedState;latestStoreState.current=newStoreState}catch(err){latestSubscriptionCallbackError.current=err}forceRender()}subscription.onStateChange=checkForUpdates;subscription.trySubscribe();checkForUpdates();return function(){return subscription.tryUnsubscribe()}},[store,subscription]);return selectedState}function createSelectorHook(context){void 0===context&&(context=_Context.ReactReduxContext);
var useReduxContext=context===_Context.ReactReduxContext?_useReduxContext2.useReduxContext:function(){return(0,_react.useContext)(context)};return function(selector,equalityFn){void 0===equalityFn&&(equalityFn=refEquality);if(!selector)throw Error("You must pass a selector to useSelector");if("function"!==typeof selector)throw Error("You must pass a function as a selector to useSelector");if("function"!==typeof equalityFn)throw Error("You must pass a function as an equality function to useSelector");
var _useReduxContext=useReduxContext();selector=useSelectorWithStoreAndSubscription(selector,equalityFn,_useReduxContext.store,_useReduxContext.subscription);(0,_react.useDebugValue)(selector);return selector}}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");exports.__esModule=!0;exports.createSelectorHook=createSelectorHook;exports.useSelector=void 0;var _react=require("module$node_modules$react$index"),_useReduxContext2=require("module$node_modules$react_redux$lib$hooks$useReduxContext"),
_Subscription=global(require("module$node_modules$react_redux$lib$utils$Subscription")),_useIsomorphicLayoutEffect=require("module$node_modules$react_redux$lib$utils$useIsomorphicLayoutEffect"),_Context=require("module$node_modules$react_redux$lib$components$Context"),refEquality=function(a,b){return a===b};require=createSelectorHook();exports.useSelector=require}
//# sourceMappingURL=module$node_modules$react_redux$lib$hooks$useSelector.js.map
