shadow$provide.module$node_modules$color_convert$route=function(global,require,module,exports){function link(from,to){return function(args){return to(from(args))}}var conversions=require("module$node_modules$color_convert$conversions");module.exports=function(fromModel){for(var graph={},models=Object.keys(conversions),len=models.length,i=0;i<len;i++)graph[models[i]]={distance:-1,parent:null};models=[fromModel];for(graph[fromModel].distance=0;models.length;){fromModel=models.pop();len=Object.keys(conversions[fromModel]);
i=len.length;for(var i$jscomp$0=0;i$jscomp$0<i;i$jscomp$0++){var adjacent=len[i$jscomp$0],node=graph[adjacent];-1===node.distance&&(node.distance=graph[fromModel].distance+1,node.parent=fromModel,models.unshift(adjacent))}}models={};fromModel=Object.keys(graph);len=fromModel.length;for(i=0;i<len;i++){var toModel=fromModel[i];if(null!==graph[toModel].parent){i$jscomp$0=toModel;adjacent=graph;node=[adjacent[toModel].parent,toModel];var fn=conversions[adjacent[toModel].parent][toModel];for(toModel=adjacent[toModel].parent;adjacent[toModel].parent;)node.unshift(adjacent[toModel].parent),
fn=link(conversions[adjacent[toModel].parent][toModel],fn),toModel=adjacent[toModel].parent;fn.conversion=node;models[i$jscomp$0]=fn}}return models}}
//# sourceMappingURL=module$node_modules$color_convert$route.js.map
