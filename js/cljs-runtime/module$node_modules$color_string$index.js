shadow$provide.module$node_modules$color_string$index=function(global,require,module,exports){function clamp(num,min,max){return Math.min(Math.max(min,num),max)}function hexDouble(num){num=num.toString(16).toUpperCase();return 2>num.length?"0"+num:num}var colorNames=require("module$node_modules$color_name$index"),swizzle=require("module$node_modules$simple_swizzle$index"),reverseNames={},name;for(name in colorNames)colorNames.hasOwnProperty(name)&&(reverseNames[colorNames[name]]=name);var cs=module.exports=
{to:{},get:{}};cs.get=function(string){switch(string.substring(0,3).toLowerCase()){case "hsl":string=cs.get.hsl(string);var model="hsl";break;case "hwb":string=cs.get.hwb(string);model="hwb";break;default:string=cs.get.rgb(string),model="rgb"}return string?{model,value:string}:null};cs.get.rgb=function(string){if(!string)return null;var abbr=/^#([a-f0-9]{3,4})$/i,rgba=/^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/,per=/^rgba?\(\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/,
keyword=/(\D+)/,rgb=[0,0,0,1],match;if(match=string.match(/^#([a-f0-9]{6})([a-f0-9]{2})?$/i)){abbr=match[2];match=match[1];for(string=0;3>string;string++)rgba=2*string,rgb[string]=parseInt(match.slice(rgba,rgba+2),16);abbr&&(rgb[3]=parseInt(abbr,16)/255)}else if(match=string.match(abbr)){match=match[1];abbr=match[3];for(string=0;3>string;string++)rgb[string]=parseInt(match[string]+match[string],16);abbr&&(rgb[3]=parseInt(abbr+abbr,16)/255)}else if(match=string.match(rgba)){for(string=0;3>string;string++)rgb[string]=
parseInt(match[string+1],0);match[4]&&(rgb[3]=parseFloat(match[4]))}else if(match=string.match(per)){for(string=0;3>string;string++)rgb[string]=Math.round(2.55*parseFloat(match[string+1]));match[4]&&(rgb[3]=parseFloat(match[4]))}else{if(match=string.match(keyword)){if("transparent"===match[1])return[0,0,0,0];rgb=colorNames[match[1]];if(!rgb)return null;rgb[3]=1;return rgb}return null}for(string=0;3>string;string++)rgb[string]=clamp(rgb[string],0,255);rgb[3]=clamp(rgb[3],0,1);return rgb};cs.get.hsl=
function(string){if(!string)return null;var match=string.match(/^hsla?\(\s*([+-]?(?:\d{0,3}\.)?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/);if(match){var alpha=parseFloat(match[4]);string=(parseFloat(match[1])+360)%360;var s=clamp(parseFloat(match[2]),0,100);match=clamp(parseFloat(match[3]),0,100);alpha=clamp(isNaN(alpha)?1:alpha,0,1);return[string,s,match,alpha]}return null};cs.get.hwb=function(string){if(!string)return null;var match=string.match(/^hwb\(\s*([+-]?\d{0,3}(?:\.\d+)?)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/);
if(match){var alpha=parseFloat(match[4]);string=(parseFloat(match[1])%360+360)%360;var w=clamp(parseFloat(match[2]),0,100);match=clamp(parseFloat(match[3]),0,100);alpha=clamp(isNaN(alpha)?1:alpha,0,1);return[string,w,match,alpha]}return null};cs.to.hex=function(){var rgba=swizzle(arguments);return"#"+hexDouble(rgba[0])+hexDouble(rgba[1])+hexDouble(rgba[2])+(1>rgba[3]?hexDouble(Math.round(255*rgba[3])):"")};cs.to.rgb=function(){var rgba=swizzle(arguments);return 4>rgba.length||1===rgba[3]?"rgb("+Math.round(rgba[0])+
", "+Math.round(rgba[1])+", "+Math.round(rgba[2])+")":"rgba("+Math.round(rgba[0])+", "+Math.round(rgba[1])+", "+Math.round(rgba[2])+", "+rgba[3]+")"};cs.to.rgb.percent=function(){var rgba=swizzle(arguments),r=Math.round(rgba[0]/255*100),g=Math.round(rgba[1]/255*100),b=Math.round(rgba[2]/255*100);return 4>rgba.length||1===rgba[3]?"rgb("+r+"%, "+g+"%, "+b+"%)":"rgba("+r+"%, "+g+"%, "+b+"%, "+rgba[3]+")"};cs.to.hsl=function(){var hsla=swizzle(arguments);return 4>hsla.length||1===hsla[3]?"hsl("+hsla[0]+
", "+hsla[1]+"%, "+hsla[2]+"%)":"hsla("+hsla[0]+", "+hsla[1]+"%, "+hsla[2]+"%, "+hsla[3]+")"};cs.to.hwb=function(){var hwba=swizzle(arguments),a="";4<=hwba.length&&1!==hwba[3]&&(a=", "+hwba[3]);return"hwb("+hwba[0]+", "+hwba[1]+"%, "+hwba[2]+"%"+a+")"};cs.to.keyword=function(rgb){return reverseNames[rgb.slice(0,3)]}}
//# sourceMappingURL=module$node_modules$color_string$index.js.map
