{"version":3,"sources":["bfuncs/reduction_steps.cljs"],"mappings":"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","names":["bfuncs.reduction-steps/label-displayed-steps","o","map__68297","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","obj68301","k68302","obj68303","applied-science.js-interop.impl/in?*","js/undefined","obj68304","k68305","obj68311","obj68313","k68314","obj68315","from","to","count","cljs.core._EQ_","bfuncs.reduction-steps/label-displayed-steps-mini","obj68329","k68330","obj68331","bfuncs.reduction-steps/div-button-base","props","reagent.core.create_element","js/module$node_modules$$material_ui$core$esm$ButtonBase$index.default","js/Object.assign","p__68348","map__68349","cljs.core.get","bfuncs.reduction-steps/reduction-steps-body","steps","title-row-fn","group-row-fn","head-row","paginated","!sel","format-term","format-prime","term-length","map__68358","cljs.core/deref","vec__68359","cljs.core.nth","vec__68362","page","steps-per-page","selection","fst","lst","sel-i","sel-g","sel-imp","sel-terms","sel","bfuncs.minimization.decode_selection","cljs.core.doall","cljs.core/seq","iter__27573__auto__","s__68371","i__68372","cljs.core/LazySeq","temp__5735__auto__","cljs.core/chunked-seq?","c__68375","size__27572__auto__","cljs.core/count","b__68374","cljs.core/chunk-buffer","j__68373","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__68370","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","i","step","reagent-material-ui.core.table-body/table-body","G__68387","G__68388","G__68564","G__68565","s__68390","i__68391","c__68394","b__68393","j__68392","vec__68399","iter__68389","vec__68498","s__68567","i__68568","c__68571","b__68570","j__68569","vec__68572","iter__68566","vec__68613","j","group","imps","cljs.core/with-meta","G__68405","G__68406","G__68501","G__68502","G__68575","G__68576","G__68616","G__68617","s__68408","i__68409","c__68412","b__68411","j__68410","p1__68345#","iter__68407","s__68504","i__68505","c__68508","b__68507","j__68506","iter__68503","s__68578","i__68579","c__68582","b__68581","j__68580","iter__68577","s__68619","i__68620","c__68623","b__68622","j__68621","iter__68618","k","imp","terms","bfuncs.minimization/covered-terms","term","bfuncs.utils/singleton?","prime-index","cljs.core/meta","v","status","clojure.set/subset?","G__68421","G__68457","G__68509","G__68552","G__68583","G__68599","G__68624","G__68639","bfuncs.minimization/compatible?","reagent-material-ui.core.table-row/table-row","reagent.core.class_names","G__68424","G__68460","G__68510","G__68553","G__68586","G__68600","G__68625","G__68640","cljs.core.swap_BANG_","bfuncs.utils/toggle-selection","names","G__68425","G__68463","G__68512","G__68554","G__68587","G__68601","G__68626","G__68641","cljs.core.conj","bfuncs.typesetting/$","G__68426","G__68469","G__68514","G__68555","G__68588","G__68602","G__68627","G__68642","cljs.core.into","reagent-material-ui.core.table-cell/table-cell","cljs.core/empty?","clojure.string.join","s__68428","i__68429","c__68432","b__68431","j__68430","iter__68427","s__68476","i__68477","c__68480","b__68479","j__68478","iter__68475","s__68516","i__68517","c__68520","b__68519","j__68518","iter__68515","s__68557","i__68558","c__68561","b__68560","j__68559","iter__68556","s__68590","i__68591","c__68594","b__68593","j__68592","iter__68589","s__68604","i__68605","c__68608","b__68607","j__68606","iter__68603","s__68629","i__68630","c__68633","b__68632","j__68631","iter__68628","s__68644","i__68645","c__68648","b__68647","j__68646","iter__68643","m","x","G__68449","js/Error","G__68452","G__68483","G__68489","G__68527","G__68546","G__68562","G__68563","G__68595","G__68596","G__68609","G__68610","G__68634","G__68637","G__68650","G__68651","p__68655","map__68656","bfuncs.reduction-steps/reduction-steps-pagination","page-count","rows-per-page-options","mini","vec__68658","reagent.core/cursor","reagent-material-ui.core.table-pagination/table-pagination","p1__68653#","p2__68652#","cljs.core.merge","cljs.core/assoc-in","p1__68654#","cljs.core/clj->js","cljs.core/assoc","bfuncs.utils/event-value","p__68661","map__68662","bfuncs.reduction-steps/reduction-steps-section","data","!vars","pagination-threshold","map__68664","target-form","cljs.core/vec","nsteps","nvars","nrows","bfuncs.utils.map_reduce","cljs.core.partial","bfuncs.utils/map-reduce","cljs.core.comp","cljs.core/val","cljs.core/+","reagent-material-ui.core.grid/grid","reagent-material-ui.core.table-container/table-container","bfuncs.style/!vclasses","reagent-material-ui.core.table/table","reagent-material-ui.core.tooltip/tooltip","G__68667","cljs.core/Keyword","iter__4529__auto__","s__68669","c__4527__auto__","size__4528__auto__","b__68671","i__68670","cljs.core/-nth","iter__68668","cljs.core.range","bfuncs.typesetting.format_var","pagination?","reagent-material-ui.core.typography/typography","and__4115__auto__","imp-count","reagent-material-ui.core.table-footer/table-footer","cljs.core/chunk-first"],"sourcesContent":["(ns bfuncs.reduction-steps\r\n  (:require\r\n   [bfuncs.minimization :as bmin :refer [decode-selection covered-terms]]\r\n   [bfuncs.utils :refer\r\n    [echo map-vals map-assoc\r\n     map-reduce event-value event-checked\r\n     pass for' fori fori' conj-when log\r\n     fn-> let-case exec timed-fn get-meta\r\n     if-first count-when positions toggle-class\r\n     singleton? maximal-by applied mp add-keys condf rrange\r\n     maximum int-digits\r\n     toggle-selection-key-up-fn toggle-selection-key-down-fn toggle-selection\r\n     ]]\r\n   [bfuncs.typesetting-data :refer [default-macros]]\r\n   [bfuncs.style :refer [classes]]\r\n   [bfuncs.typesetting :refer [$ $$ format-var format-minterm format-maxterm]]\r\n   [reagent-material-ui.core.table :refer [table]]\r\n   [\"@material-ui/core/ButtonBase\" :default MuiButtonBase]\r\n   [reagent-material-ui.core.table-body :refer [table-body]]\r\n   [reagent-material-ui.core.table-cell :refer [table-cell]]\r\n   [reagent-material-ui.core.table-row :refer [table-row]]\r\n   [reagent-material-ui.core.table-container :refer [table-container]]\r\n   [reagent-material-ui.core.table-footer :refer [table-footer]]\r\n   [reagent-material-ui.core.table-pagination :refer [table-pagination]]\r\n   [reagent.core :as r]\r\n   [clojure.set :refer [subset?]]\r\n   [clojure.string :as str]\r\n   [reagent-material-ui.core.tooltip :refer [tooltip]]\r\n   [reagent-material-ui.core.typography :refer [typography]]\r\n   [reagent-material-ui.core.grid :refer [grid]]\r\n   [applied-science.js-interop :as j]))\r\n\r\n(defn- label-displayed-steps [o]\r\n  (j/let [^:js {:keys [from to count]} o]\r\n    (if (= from to)\r\n      (str \"Step \" from \" of \" count)\r\n      (str \"Steps \" from \"-\" to \" of \" count))))\r\n\r\n(defn- label-displayed-steps-mini [o]\r\n  (str \"of \" (j/get o :count)))\r\n\r\n(defn- div-button-base\r\n  [props]\r\n  (r/create-element\r\n   MuiButtonBase\r\n   (js/Object.assign #js {}\r\n                     props\r\n                     #js {:component \"tr\"\r\n                          :disableRipple true})))\r\n\r\n(defn- reduction-steps-body\r\n  [{:keys [steps title-row-fn group-row-fn head-row paginated !sel format-term format-prime term-length]}]\r\n  (let [{[page steps-per-page] :page-data\r\n         selection :selection} @!sel\r\n        fst (if paginated (* page steps-per-page) 0)\r\n        lst (if paginated (+ fst steps-per-page) ##Inf)\r\n        [sel-i sel-g sel-imp sel-terms :as sel] (decode-selection selection term-length)]\r\n    [:<>\r\n     (fori' [i :index\r\n             step steps\r\n             :while (< i lst)\r\n             :when (<= fst i)]\r\n       [table-body {:key i, :class \"step-body\"}\r\n        (title-row-fn i (= i fst))\r\n        head-row\r\n        (fori' [j :index\r\n                [group imps] step]\r\n          (cons\r\n           (with-meta (group-row-fn group (count imps))\r\n                      {:key (str i j)})\r\n           (fori' [k :index\r\n                   imp imps\r\n                   :let [terms (covered-terms imp)\r\n                         term (when (singleton? terms) (first terms))\r\n                         prime-index (get-meta imp :prime-index)\r\n                         v (cond\r\n                             prime-index imp\r\n                             term term\r\n                             :else imp)\r\n                         status (when sel\r\n                                  (cond\r\n                                    (and (< sel-i i) (subset? sel-terms terms)) \"covers-selected\"\r\n                                    (and (> sel-i i) (subset? terms sel-terms)) \"covered-by-selected\"\r\n                                    :else (case (- group sel-g)\r\n                                            0 (if (= imp sel-imp) \"selected\" \"nothing\")\r\n                                            (-1 1) (if (bmin/compatible? imp sel-imp)\r\n                                                     \"compatible\"\r\n                                                     \"nothing\")\r\n                                            \"nothing\")))]]\r\n             [table-row {:key (str i j k)\r\n                         :component div-button-base\r\n                         :tab-index 0\r\n                         :class (r/class-names status \"data-row\")\r\n                         :title (case status\r\n                                  \"covers-selected\" \"Covers selection\"\r\n                                  \"covered-by-selected\" \"Covered by selection\"\r\n                                  \"compatible\" \"Can merge with selection\"\r\n                                  nil)\r\n                         :on-click #(swap! !sel toggle-selection % v nil)}\r\n              (let [names (cond-> []\r\n                            (singleton? terms) (conj [$ (format-term (first terms))])\r\n                            prime-index (conj [$ (format-prime prime-index)]))]\r\n                (into [table-cell {:class (classes \"star-cell\"\r\n                                                   (when (empty? names)\r\n                                                     \"empty\"))}]\r\n                      names))\r\n              [table-cell {:class \"terms-cell\"}\r\n               (str/join \", \" terms)]\r\n              (fori' [m :index, x imp]\r\n                ^{:key m} [table-cell (case x true \"1\" false \"0\" nil \"\u2013\")])])))])]))\r\n\r\n(defn reduction-steps-pagination\r\n  [{:keys [!sel page-count rows-per-page-options mini]}]\r\n  (let [[page steps-per-page] @(r/cursor !sel [:page-data])]\r\n    [table-pagination (merge {:count page-count\r\n                              :page page\r\n                              :rows-per-page steps-per-page\r\n                              :on-change-page #(swap! !sel assoc-in [:page-data 0] %2)}\r\n                             (if mini\r\n                               {:class \"pagination mini\"\r\n                                :label-displayed-rows label-displayed-steps-mini\r\n                                :rows-per-page-options #js []\r\n                                :component \"div\"}\r\n                               {:class \"pagination main\"\r\n                                :rows-per-page-options (clj->js rows-per-page-options)\r\n                                :label-displayed-rows label-displayed-steps\r\n                                :label-rows-per-page \"Steps per page:\"\r\n                                :on-change-rows-per-page #(swap! !sel assoc :page-data [0 (event-value %)])}))]))\r\n\r\n(defn reduction-steps-section\r\n  [{:keys [data !vars !sel format-term format-prime pagination-threshold]\r\n    :or {pagination-threshold 32}}]\r\n  (swap! !sel assoc :page-data [0 1])\r\n  (let [{:keys [steps term-length target-form]} data\r\n        steps (vec steps)\r\n        nsteps (count steps)\r\n        nvars (count @!vars)\r\n        nrows (map-reduce\r\n               (partial map-reduce\r\n                        (comp count val) +)\r\n               + steps)\r\n        paginated (> nrows pagination-threshold)]\r\n    [grid {:item true, :xs 12}\r\n     [table-container {:class (classes :reduction-steps-table \"clicky\")}\r\n      [table {:size \"small\"}\r\n       [:colgroup\r\n        [:col.group]\r\n        [:col.star]\r\n        [:col.terms]\r\n        [:col.vars]]\r\n       [reduction-steps-body\r\n        (mp :head-row [table-row {:class \"head-row\"}\r\n                       [table-cell {:variant \"head\", :class \"group-cell\"}\r\n                        [tooltip {:placement \"top\"\r\n                                  :title \"Group implicants by number of set bits\"}\r\n                         [:span \"Group\"]]]\r\n                       [table-cell {:variant \"head\", :class \"star-cell with-bord\"}]\r\n                       [table-cell {:variant \"head\", :class \"terms-cell\"}\r\n                        (str (case target-form :SOP \"Minterms\" :POS \"Maxterms\") \" Covered\")]\r\n                       (for' [i (range nvars)]\r\n                         [table-cell {:key i\r\n                                      :variant \"head\"\r\n                                      :class \"var-cell\"}\r\n                          [$ (format-var i nvars)]])]\r\n            :title-row-fn (fn [i pagination?]\r\n                            [table-row\r\n                             [table-cell {:variant \"head\"\r\n                                          :class \"title-cell\"\r\n                                          :col-span (+ 3 nvars)}\r\n                              [:div.title\r\n                               [typography {:variant \"h6\"}\r\n                                (str \"Step \" (inc i))]\r\n                               [typography {:variant \"body1\"\r\n                                            :color \"textSecondary\"\r\n                                            :class \"count\"}\r\n                                (str \"\\u00a0of \" nsteps)]\r\n                               (when (and pagination? paginated)\r\n                                 [reduction-steps-pagination (mp :page-count nsteps\r\n                                                                 :mini true\r\n                                                                 !sel)])]]])\r\n            :group-row-fn (fn [group imp-count]\r\n                            [table-row {:class \"group-row\"}\r\n                             [table-cell {:row-span (inc imp-count)\r\n                                          :class \"group-cell\"}\r\n                              [:div.group-val group]]\r\n                             [table-cell {:class \"group-row-rest\"\r\n                                          :col-span (+ 2 nvars)}]])\r\n            steps paginated term-length !sel format-term format-prime)]\r\n       (when paginated\r\n         [table-footer\r\n          [table-row\r\n           [reduction-steps-pagination (mp :page-count nsteps\r\n                                           :rows-per-page-options [1 2 {:label \"All\" :value nsteps}]\r\n                                           !sel)]]])]]]))"]}