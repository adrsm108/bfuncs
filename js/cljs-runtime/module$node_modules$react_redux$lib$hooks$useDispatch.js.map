{
"version":3,
"file":"module$node_modules$react_redux$lib$hooks$useDispatch.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,qDAAf,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiBlHC,QAASA,mBAAkB,CAACC,OAAD,CAAU,CACnB,IAAK,EAArB,GAAIA,OAAJ,GACEA,OADF,CACYC,QADZ,CACqBC,iBADrB,CAIA,KAAIC,SAAWH,OAAA,GAAYC,QAAZ,CAAqBC,iBAArB,CAAyCE,SAAzC,CAAmDD,QAAnD,CAA8D,CAAC,CAAA,CAAGC,SAAH,CAAaC,eAAd,EAA+BL,OAA/B,CAC7E,OAAOM,SAAoB,EAAG,CAE5B,MADYH,SAAAI,EACZ,CAAaC,QAFe,CANK,CAdrCV,OAAA,CAAQW,UAAR,CAAqB,CAAA,CACrBX,QAAA,CAAQC,kBAAR,CAA6BA,kBAC7BD,QAAA,CAAQQ,WAAR,CAAsB,IAAK,EAE3B,KAAIL,SAAWL,OAAA,CAAQ,wDAAR,CAAf;AAEIQ,UAAYR,OAAA,CAAQ,oDAAR,CA0CZU,OAAAA,CAA2BP,kBAAA,EAC/BD,QAAA,CAAQQ,WAAR,CAAsBA,MApD4F;",
"sources":["node_modules/react-redux/lib/hooks/useDispatch.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_redux$lib$hooks$useDispatch\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.createDispatchHook = createDispatchHook;\nexports.useDispatch = void 0;\n\nvar _Context = require(\"../components/Context\");\n\nvar _useStore = require(\"./useStore\");\n\n/**\r\n * Hook factory, which creates a `useDispatch` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useDispatch` hook bound to the specified context.\r\n */\nfunction createDispatchHook(context) {\n  if (context === void 0) {\n    context = _Context.ReactReduxContext;\n  }\n\n  var useStore = context === _Context.ReactReduxContext ? _useStore.useStore : (0, _useStore.createStoreHook)(context);\n  return function useDispatch() {\n    var store = useStore();\n    return store.dispatch;\n  };\n}\n/**\r\n * A hook to access the redux `dispatch` function.\r\n *\r\n * @returns {any|function} redux store's `dispatch` function\r\n *\r\n * @example\r\n *\r\n * import React, { useCallback } from 'react'\r\n * import { useDispatch } from 'react-redux'\r\n *\r\n * export const CounterComponent = ({ value }) => {\r\n *   const dispatch = useDispatch()\r\n *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])\r\n *   return (\r\n *     <div>\r\n *       <span>{value}</span>\r\n *       <button onClick={increaseCounter}>Increase counter</button>\r\n *     </div>\r\n *   )\r\n * }\r\n */\n\n\nvar useDispatch = /*#__PURE__*/createDispatchHook();\nexports.useDispatch = useDispatch;\n};"],
"names":["shadow$provide","global","require","module","exports","createDispatchHook","context","_Context","ReactReduxContext","useStore","_useStore","createStoreHook","useDispatch","store","dispatch","__esModule"]
}
