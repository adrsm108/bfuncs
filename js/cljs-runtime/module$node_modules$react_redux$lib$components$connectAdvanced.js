shadow$provide.module$node_modules$react_redux$lib$components$connectAdvanced=function(global,require,module,exports){function storeStateUpdatesReducer(state,action){return[action.payload,state[1]+1]}function useIsomorphicLayoutEffectWithArgs(effectFunc,effectArgs,dependencies){(0,_useIsomorphicLayoutEffect.useIsomorphicLayoutEffect)(function(){return effectFunc.apply(void 0,effectArgs)},dependencies)}function captureWrapperProps(lastWrapperProps,lastChildProps,renderIsScheduled,wrapperProps,actualChildProps,
childPropsFromStoreUpdate,notifyNestedSubs){lastWrapperProps.current=wrapperProps;lastChildProps.current=actualChildProps;renderIsScheduled.current=!1;childPropsFromStoreUpdate.current&&(childPropsFromStoreUpdate.current=null,notifyNestedSubs())}function subscribeUpdates(shouldHandleStateChanges,store,subscription,childPropsSelector,lastWrapperProps,lastChildProps,renderIsScheduled,childPropsFromStoreUpdate,notifyNestedSubs,forceComponentUpdateDispatch){if(shouldHandleStateChanges){var didUnsubscribe=
!1,lastThrownError=null;shouldHandleStateChanges=function(){if(!didUnsubscribe){var latestStoreState=store.getState(),error;try{var newChildProps=childPropsSelector(latestStoreState,lastWrapperProps.current)}catch(e){lastThrownError=error=e}error||(lastThrownError=null);newChildProps===lastChildProps.current?renderIsScheduled.current||notifyNestedSubs():(lastChildProps.current=newChildProps,childPropsFromStoreUpdate.current=newChildProps,renderIsScheduled.current=!0,forceComponentUpdateDispatch({type:"STORE_UPDATED",
payload:{error}}))}};subscription.onStateChange=shouldHandleStateChanges;subscription.trySubscribe();shouldHandleStateChanges();return function(){didUnsubscribe=!0;subscription.tryUnsubscribe();subscription.onStateChange=null;if(lastThrownError)throw lastThrownError;}}}global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");exports.__esModule=!0;exports["default"]=function(selectorFactory,
_ref){void 0===_ref&&(_ref={});var _ref2$getDisplayName=_ref.getDisplayName,getDisplayName=void 0===_ref2$getDisplayName?function(name){return"ConnectAdvanced("+name+")"}:_ref2$getDisplayName;_ref2$getDisplayName=_ref.methodName;var methodName=void 0===_ref2$getDisplayName?"connectAdvanced":_ref2$getDisplayName;_ref2$getDisplayName=_ref.renderCountProp;var renderCountProp=void 0===_ref2$getDisplayName?void 0:_ref2$getDisplayName;_ref2$getDisplayName=_ref.shouldHandleStateChanges;var shouldHandleStateChanges=
void 0===_ref2$getDisplayName?!0:_ref2$getDisplayName;_ref2$getDisplayName=_ref.storeKey;var storeKey=void 0===_ref2$getDisplayName?"store":_ref2$getDisplayName;_ref2$getDisplayName=_ref.withRef;_ref2$getDisplayName=void 0===_ref2$getDisplayName?!1:_ref2$getDisplayName;var _ref2$forwardRef=_ref.forwardRef,forwardRef=void 0===_ref2$forwardRef?!1:_ref2$forwardRef;_ref2$forwardRef=_ref.context;var context=void 0===_ref2$forwardRef?_Context.ReactReduxContext:_ref2$forwardRef,connectOptions=(0,_objectWithoutPropertiesLoose2["default"])(_ref,
"getDisplayName methodName renderCountProp shouldHandleStateChanges storeKey withRef forwardRef context".split(" "));if(void 0!==renderCountProp)throw Error("renderCountProp is removed. render counting is built into the latest React Dev Tools profiling extension");if(_ref2$getDisplayName)throw Error("withRef is removed. To access the wrapped instance, use a ref on the connected component");if("store"!==storeKey)throw Error("storeKey has been removed and does not do anything. To use a custom Redux store for specific components, create a custom React context with React.createContext(), and pass the context object to React Redux's Provider and specific components like: \x3cProvider context\x3d{MyContext}\x3e\x3cConnectedComponent context\x3d{MyContext} /\x3e\x3c/Provider\x3e. You may also pass a {context : MyContext} option to connect");
return function(WrappedComponent){function ConnectFunction(props){var _useMemo=(0,_react.useMemo)(function(){var reactReduxForwardedRef=props.reactReduxForwardedRef,wrapperProps=(0,_objectWithoutPropertiesLoose2["default"])(props,["reactReduxForwardedRef"]);return[props.context,reactReduxForwardedRef,wrapperProps]},[props]),propsContext=_useMemo[0],reactReduxForwardedRef=_useMemo[1],wrapperProps$jscomp$0=_useMemo[2],ContextToUse=(0,_react.useMemo)(function(){return propsContext&&propsContext.Consumer&&
(0,_reactIs.isContextConsumer)(_react["default"].createElement(propsContext.Consumer,null))?propsContext:context},[propsContext,context]),contextValue=(0,_react.useContext)(ContextToUse),didStoreComeFromProps=!!props.store&&!!props.store.getState&&!!props.store.dispatch;_useMemo=!!contextValue&&!!contextValue.store;if(!didStoreComeFromProps&&!_useMemo)throw Error('Could not find "store" in the context of "'+(displayName+'". Either wrap the root component in a \x3cProvider\x3e, or pass a custom React context provider to \x3cProvider\x3e and the corresponding React context consumer to ')+
(displayName+" in connect options."));var store=didStoreComeFromProps?props.store:contextValue.store,childPropsSelector=(0,_react.useMemo)(function(){return selectorFactory(store.dispatch,selectorFactoryOptions)},[store]);_useMemo=(0,_react.useMemo)(function(){if(!shouldHandleStateChanges)return NO_SUBSCRIPTION_ARRAY;var subscription=new _Subscription["default"](store,didStoreComeFromProps?null:contextValue.subscription),notifyNestedSubs=subscription.notifyNestedSubs.bind(subscription);return[subscription,
notifyNestedSubs]},[store,didStoreComeFromProps,contextValue]);var subscription$jscomp$0=_useMemo[0];_useMemo=_useMemo[1];var overriddenContextValue=(0,_react.useMemo)(function(){return didStoreComeFromProps?contextValue:(0,_extends2["default"])({},contextValue,{subscription:subscription$jscomp$0})},[didStoreComeFromProps,contextValue,subscription$jscomp$0]),_useReducer=(0,_react.useReducer)(storeStateUpdatesReducer,EMPTY_ARRAY,initStateUpdates),previousStateUpdateResult=_useReducer[0][0];_useReducer=
_useReducer[1];if(previousStateUpdateResult&&previousStateUpdateResult.error)throw previousStateUpdateResult.error;var lastChildProps=(0,_react.useRef)(),lastWrapperProps=(0,_react.useRef)(wrapperProps$jscomp$0),childPropsFromStoreUpdate=(0,_react.useRef)(),renderIsScheduled=(0,_react.useRef)(!1),actualChildProps=usePureOnlyMemo(function(){return childPropsFromStoreUpdate.current&&wrapperProps$jscomp$0===lastWrapperProps.current?childPropsFromStoreUpdate.current:childPropsSelector(store.getState(),
wrapperProps$jscomp$0)},[store,previousStateUpdateResult,wrapperProps$jscomp$0]);useIsomorphicLayoutEffectWithArgs(captureWrapperProps,[lastWrapperProps,lastChildProps,renderIsScheduled,wrapperProps$jscomp$0,actualChildProps,childPropsFromStoreUpdate,_useMemo]);useIsomorphicLayoutEffectWithArgs(subscribeUpdates,[shouldHandleStateChanges,store,subscription$jscomp$0,childPropsSelector,lastWrapperProps,lastChildProps,renderIsScheduled,childPropsFromStoreUpdate,_useMemo,_useReducer],[store,subscription$jscomp$0,
childPropsSelector]);var renderedWrappedComponent=(0,_react.useMemo)(function(){return _react["default"].createElement(WrappedComponent,(0,_extends2["default"])({},actualChildProps,{ref:reactReduxForwardedRef}))},[reactReduxForwardedRef,WrappedComponent,actualChildProps]);return(0,_react.useMemo)(function(){return shouldHandleStateChanges?_react["default"].createElement(ContextToUse.Provider,{value:overriddenContextValue},renderedWrappedComponent):renderedWrappedComponent},[ContextToUse,renderedWrappedComponent,
overriddenContextValue])}if(!(0,_reactIs.isValidElementType)(WrappedComponent))throw Error("You must pass a component to the function returned by "+(methodName+". Instead received "+stringifyComponent(WrappedComponent)));var wrappedComponentName=WrappedComponent.displayName||WrappedComponent.name||"Component",displayName=getDisplayName(wrappedComponentName),selectorFactoryOptions=(0,_extends2["default"])({},connectOptions,{getDisplayName,methodName,renderCountProp,shouldHandleStateChanges,storeKey,
displayName,wrappedComponentName,WrappedComponent}),usePureOnlyMemo=(wrappedComponentName=connectOptions.pure)?_react.useMemo:function(callback){return callback()},Connect=wrappedComponentName?_react["default"].memo(ConnectFunction):ConnectFunction;Connect.WrappedComponent=WrappedComponent;Connect.displayName=ConnectFunction.displayName=displayName;return forwardRef?(wrappedComponentName=_react["default"].forwardRef(function(props,ref){return _react["default"].createElement(Connect,(0,_extends2["default"])({},
props,{reactReduxForwardedRef:ref}))}),wrappedComponentName.displayName=displayName,wrappedComponentName.WrappedComponent=WrappedComponent,(0,_hoistNonReactStatics["default"])(wrappedComponentName,WrappedComponent)):(0,_hoistNonReactStatics["default"])(Connect,WrappedComponent)}};var _extends2=module(require("module$node_modules$$babel$runtime$helpers$extends")),_objectWithoutPropertiesLoose2=module(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose")),_hoistNonReactStatics=
module(require("module$node_modules$hoist_non_react_statics$dist$hoist_non_react_statics_cjs")),_react=global(require("module$node_modules$react$index")),_reactIs=require("module$node_modules$react_is$index"),_Subscription=module(require("module$node_modules$react_redux$lib$utils$Subscription")),_useIsomorphicLayoutEffect=require("module$node_modules$react_redux$lib$utils$useIsomorphicLayoutEffect"),_Context=require("module$node_modules$react_redux$lib$components$Context"),EMPTY_ARRAY=[],NO_SUBSCRIPTION_ARRAY=
[null,null],stringifyComponent=function(Comp){try{return JSON.stringify(Comp)}catch(err){return String(Comp)}},initStateUpdates=function(){return[null,0]}}
//# sourceMappingURL=module$node_modules$react_redux$lib$components$connectAdvanced.js.map
