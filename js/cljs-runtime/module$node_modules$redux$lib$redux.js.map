{
"version":3,
"file":"module$node_modules$redux$lib$redux.js",
"lineCount":22,
"mappings":"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",
"sources":["node_modules/redux/lib/redux.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$redux$lib$redux\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar _objectSpread = require('@babel/runtime/helpers/objectSpread2');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar _objectSpread__default = /*#__PURE__*/_interopDefaultLegacy(_objectSpread);\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nfunction formatProdErrorMessage(code) {\n  return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + 'use the non-minified dev environment for full errors. ';\n}\n\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = (function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n})();\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\n    function miniKindOf(val) {\n      if (val === void 0) return 'undefined';\n      if (val === null) return 'null';\n      var type = typeof val;\n\n      switch (type) {\n        case 'boolean':\n        case 'string':\n        case 'number':\n        case 'symbol':\n        case 'function':\n          {\n            return type;\n          }\n      }\n\n      if (Array.isArray(val)) return 'array';\n      if (isDate(val)) return 'date';\n      if (isError(val)) return 'error';\n      var constructorName = ctorName(val);\n\n      switch (constructorName) {\n        case 'Symbol':\n        case 'Promise':\n        case 'WeakMap':\n        case 'WeakSet':\n        case 'Map':\n        case 'Set':\n          return constructorName;\n      } // other\n\n\n      return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n    }\n\n    function ctorName(val) {\n      return typeof val.constructor === 'function' ? val.constructor.name : null;\n    }\n\n    function isError(val) {\n      return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n    }\n\n    function isDate(val) {\n      if (val instanceof Date) return true;\n      return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n    }\n\n    typeOfVal = miniKindOf(val);\n  }\n\n  return typeOfVal;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(1) : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(2) : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(4) : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing \u201cwhat changed\u201d. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(7) : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(9) : 'Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(10) : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(11) : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + kindOf(inputState) + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(12) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(13) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle '\" + ActionTypes.INIT + \"' or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(14) : \"When called with an action of type \" + (actionType ? \"\\\"\" + String(actionType) + \"\\\"\" : '(unknown type)') + \", the slice reducer for key \\\"\" + _key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(16) : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread__default['default'](_objectSpread__default['default']({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexports.__DO_NOT_USE__ActionTypes = ActionTypes;\nexports.applyMiddleware = applyMiddleware;\nexports.bindActionCreators = bindActionCreators;\nexports.combineReducers = combineReducers;\nexports.compose = compose;\nexports.createStore = createStore;\n\n};"],
"names":["shadow$provide","global","require","module","exports","isPlainObject","obj","proto","Object","getPrototypeOf","kindOf","val","typeOfVal","miniKindOf","type","Array","isArray","Date","toDateString","getDate","setDate","Error","message","constructor","stackTraceLimit","constructorName","name","slice","toLowerCase","replace","createStore","reducer","preloadedState","enhancer","getState","isDispatching","currentState","subscribe","listener","isSubscribed","nextListeners","currentListeners","push","unsubscribe","index","indexOf","splice","dispatch","action","currentReducer","listeners","i","length","_ref2","undefined","ActionTypes","INIT","replaceReducer","nextReducer","REPLACE","$$observable","observable","_ref","observer","observeState","next","warning","console","error","e","getUnexpectedStateShapeWarningMessage","inputState","reducers","unexpectedKeyCache","reducerKeys","keys","argumentName","join","unexpectedKeys","filter","key","hasOwnProperty","forEach","assertReducerShape","initialState","PROBE_UNKNOWN_ACTION","bindActionCreator","actionCreator","apply","arguments","compose","_len","funcs","_key","arg","reduce","a","b","isCrushed","defineProperty","value","_objectSpread__default","_objectSpread","Symbol","randomString","Math","random","toString","substring","split","__DO_NOT_USE__ActionTypes","applyMiddleware","middlewares","store","_dispatch","middlewareAPI","chain","map","middleware","bindActionCreators","actionCreators","boundActionCreators","combineReducers","finalReducers","finalReducerKeys","shapeAssertionError","combination","state","warningMessage","hasChanged","nextState","_i","previousStateForKey","nextStateForKey","actionType","String"]
}
