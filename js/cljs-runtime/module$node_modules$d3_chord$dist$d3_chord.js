shadow$provide.module$node_modules$d3_chord$dist$d3_chord=function(global$jscomp$0,require,module,exports$jscomp$0){(function(global,factory){"object"===typeof exports$jscomp$0&&"undefined"!==typeof module?factory(exports$jscomp$0,require("module$node_modules$d3_path$dist$d3_path")):"function"===typeof define&&define.amd?define(["exports","d3-path"],factory):(global=global||self,factory(global.d3=global.d3||{},global.d3))})(this,function(exports,d3Path){function range(i,j){return Array.from({length:j-
i},(_,k)=>i+k)}function compareValue(compare){return function(a,b){return compare(a.source.value+a.target.value,b.source.value+b.target.value)}}function chord$1(directed,transpose){function chord(matrix){var n=matrix.length,groupSums=Array(n),groupIndex=range(0,n),chords=Array(n*n),groups=Array(n),k=0,dx;matrix=Float64Array.from({length:n*n},transpose?(_,i)=>matrix[i%n][i/n|0]:(_,i)=>matrix[i/n|0][i%n]);for(dx=0;dx<n;++dx){var x=0;for(var j$jscomp$0=0;j$jscomp$0<n;++j$jscomp$0)x+=matrix[dx*n+j$jscomp$0]+
directed*matrix[j$jscomp$0*n+dx];k+=groupSums[dx]=x}dx=(k=max(0,tau-padAngle*n)/k)?padAngle:tau/n;x=0;sortGroups&&groupIndex.sort((a,b)=>sortGroups(groupSums[a],groupSums[b]));for(const i of groupIndex){groupIndex=x;if(directed){j$jscomp$0=range(~n+1,n).filter(j=>0>j?matrix[~j*n+i]:matrix[i*n+j]);sortSubgroups&&j$jscomp$0.sort((a,b)=>sortSubgroups(0>a?-matrix[~a*n+i]:matrix[i*n+a],0>b?-matrix[~b*n+i]:matrix[i*n+b]));for(const j of j$jscomp$0)0>j?(chords[~j*n+i]||(chords[~j*n+i]={source:null,target:null})).target=
{index:i,startAngle:x,endAngle:x+=matrix[~j*n+i]*k,value:matrix[~j*n+i]}:(chords[i*n+j]||(chords[i*n+j]={source:null,target:null})).source={index:i,startAngle:x,endAngle:x+=matrix[i*n+j]*k,value:matrix[i*n+j]}}else{j$jscomp$0=range(0,n).filter(j=>matrix[i*n+j]||matrix[j*n+i]);sortSubgroups&&j$jscomp$0.sort((a,b)=>sortSubgroups(matrix[i*n+a],matrix[i*n+b]));for(const j of j$jscomp$0)if(i<j?(j$jscomp$0=chords[i*n+j]||(chords[i*n+j]={source:null,target:null}),j$jscomp$0.source={index:i,startAngle:x,
endAngle:x+=matrix[i*n+j]*k,value:matrix[i*n+j]}):(j$jscomp$0=chords[j*n+i]||(chords[j*n+i]={source:null,target:null}),j$jscomp$0.target={index:i,startAngle:x,endAngle:x+=matrix[i*n+j]*k,value:matrix[i*n+j]},i===j&&(j$jscomp$0.source=j$jscomp$0.target)),j$jscomp$0.source&&j$jscomp$0.target&&j$jscomp$0.source.value<j$jscomp$0.target.value){const source=j$jscomp$0.source;j$jscomp$0.source=j$jscomp$0.target;j$jscomp$0.target=source}}groups[i]={index:i,startAngle:groupIndex,endAngle:x,value:groupSums[i]};
x+=dx}chords=Object.values(chords);chords.groups=groups;return sortChords?chords.sort(sortChords):chords}var padAngle=0,sortGroups=null,sortSubgroups=null,sortChords=null;chord.padAngle=function(_){return arguments.length?(padAngle=max(0,_),chord):padAngle};chord.sortGroups=function(_){return arguments.length?(sortGroups=_,chord):sortGroups};chord.sortSubgroups=function(_){return arguments.length?(sortSubgroups=_,chord):sortSubgroups};chord.sortChords=function(_){return arguments.length?(null==_?
sortChords=null:(sortChords=compareValue(_))._=_,chord):sortChords&&sortChords._};return chord}function constant(x){return function(){return x}}function defaultSource(d){return d.source}function defaultTarget(d){return d.target}function defaultRadius(d){return d.radius}function defaultStartAngle(d){return d.startAngle}function defaultEndAngle(d){return d.endAngle}function defaultPadAngle(){return 0}function defaultArrowheadRadius(){return 10}function ribbon(headRadius){function ribbon(){var buffer,
s=source.apply(this,arguments),t=target.apply(this,arguments),ap=padAngle.apply(this,arguments)/2,argv=slice.call(arguments);s=+sourceRadius.apply(this,(argv[0]=s,argv));var sa0=startAngle.apply(this,argv)-halfPi,sa1=endAngle.apply(this,argv)-halfPi;t=+targetRadius.apply(this,(argv[0]=t,argv));var ta0=startAngle.apply(this,argv)-halfPi;argv=endAngle.apply(this,argv)-halfPi;context||(context=buffer=d3Path.path());1E-12<ap&&(abs(sa1-sa0)>2*ap+1E-12?sa1>sa0?(sa0+=ap,sa1-=ap):(sa0-=ap,sa1+=ap):sa0=sa1=
(sa0+sa1)/2,abs(argv-ta0)>2*ap+1E-12?argv>ta0?(ta0+=ap,argv-=ap):(ta0-=ap,argv+=ap):ta0=argv=(ta0+argv)/2);context.moveTo(s*cos(sa0),s*sin(sa0));context.arc(0,0,s,sa0,sa1);if(sa0!==ta0||sa1!==argv)headRadius?(ap=+headRadius.apply(this,arguments),ap=t-ap,sa1=(ta0+argv)/2,context.quadraticCurveTo(0,0,ap*cos(ta0),ap*sin(ta0)),context.lineTo(t*cos(sa1),t*sin(sa1)),context.lineTo(ap*cos(argv),ap*sin(argv))):(context.quadraticCurveTo(0,0,t*cos(ta0),t*sin(ta0)),context.arc(0,0,t,ta0,argv));context.quadraticCurveTo(0,
0,s*cos(sa0),s*sin(sa0));context.closePath();if(buffer)return context=null,buffer+""||null}var source=defaultSource,target=defaultTarget,sourceRadius=defaultRadius,targetRadius=defaultRadius,startAngle=defaultStartAngle,endAngle=defaultEndAngle,padAngle=defaultPadAngle,context=null;headRadius&&(ribbon.headRadius=function(_){return arguments.length?(headRadius="function"===typeof _?_:constant(+_),ribbon):headRadius});ribbon.radius=function(_){return arguments.length?(sourceRadius=targetRadius="function"===
typeof _?_:constant(+_),ribbon):sourceRadius};ribbon.sourceRadius=function(_){return arguments.length?(sourceRadius="function"===typeof _?_:constant(+_),ribbon):sourceRadius};ribbon.targetRadius=function(_){return arguments.length?(targetRadius="function"===typeof _?_:constant(+_),ribbon):targetRadius};ribbon.startAngle=function(_){return arguments.length?(startAngle="function"===typeof _?_:constant(+_),ribbon):startAngle};ribbon.endAngle=function(_){return arguments.length?(endAngle="function"===
typeof _?_:constant(+_),ribbon):endAngle};ribbon.padAngle=function(_){return arguments.length?(padAngle="function"===typeof _?_:constant(+_),ribbon):padAngle};ribbon.source=function(_){return arguments.length?(source=_,ribbon):source};ribbon.target=function(_){return arguments.length?(target=_,ribbon):target};ribbon.context=function(_){return arguments.length?(context=null==_?null:_,ribbon):context};return ribbon}var abs=Math.abs,cos=Math.cos,sin=Math.sin,pi=Math.PI,halfPi=pi/2,tau=2*pi,max=Math.max,
slice=Array.prototype.slice;exports.chord=function(){return chord$1(!1,!1)};exports.chordDirected=function(){return chord$1(!0,!1)};exports.chordTranspose=function(){return chord$1(!1,!0)};exports.ribbon=function(){return ribbon()};exports.ribbonArrow=function(){return ribbon(defaultArrowheadRadius)};Object.defineProperty(exports,"__esModule",{value:!0})})}
//# sourceMappingURL=module$node_modules$d3_chord$dist$d3_chord.js.map
