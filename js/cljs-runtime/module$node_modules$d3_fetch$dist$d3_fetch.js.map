{
"version":3,
"file":"module$node_modules$d3_fetch$dist$d3_fetch.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/d3-fetch/dist/d3-fetch.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_fetch$dist$d3_fetch\"] = function(global,require,module,exports) {\n// https://d3js.org/d3-fetch/ v2.0.0 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dsv')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-dsv'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3));\n}(this, function (exports, d3Dsv) { 'use strict';\n\nfunction responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.blob();\n}\n\nfunction blob(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n\nfunction responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nfunction buffer(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n\nfunction responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nfunction text(input, init) {\n  return fetch(input, init).then(responseText);\n}\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nfunction dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = d3Dsv.dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nvar csv = dsvParse(d3Dsv.csvParse);\nvar tsv = dsvParse(d3Dsv.tsvParse);\n\nfunction image(input, init) {\n  return new Promise(function(resolve, reject) {\n    var image = new Image;\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function() { resolve(image); };\n    image.src = input;\n  });\n}\n\nfunction responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  if (response.status === 204 || response.status === 205) return;\n  return response.json();\n}\n\nfunction json(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n\nfunction parser(type) {\n  return (input, init) => text(input, init)\n    .then(text => (new DOMParser).parseFromString(text, type));\n}\n\nvar xml = parser(\"application/xml\");\n\nvar html = parser(\"text/html\");\n\nvar svg = parser(\"image/svg+xml\");\n\nexports.blob = blob;\nexports.buffer = buffer;\nexports.csv = csv;\nexports.dsv = dsv;\nexports.html = html;\nexports.image = image;\nexports.json = json;\nexports.svg = svg;\nexports.text = text;\nexports.tsv = tsv;\nexports.xml = xml;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","self","d3","d3Dsv","responseBlob","response","ok","Error","status","statusText","blob","responseArrayBuffer","arrayBuffer","responseText","text","input","init","fetch","then","dsvParse","parse","row","arguments","length","undefined","responseJson","json","parser","type","DOMParser","parseFromString","csv","csvParse","tsv","tsvParse","xml","html","svg","buffer","dsv","delimiter","format","dsvFormat","image","Promise","resolve","reject","Image","key","onerror","onload","image.onload","src","Object","defineProperty","value"]
}
