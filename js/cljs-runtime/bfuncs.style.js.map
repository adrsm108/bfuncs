{"version":3,"sources":["bfuncs/style.cljs"],"mappings":"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","names":["bfuncs.style/style-combine","m1","m2","cljs.core/map?","cljs.core.merge_with","bfuncs.style/theme","reagent_material_ui.styles.responsive_font_sizes","reagent-material-ui.styles/create-mui-theme","reagent-material-ui.colors/indigo","reagent-material-ui.colors/light-blue","reagent-material-ui.colors/brown","bfuncs.style/!vclasses","cljs.core/volatile!","bfuncs.style/with-styles","styles","component","G__67051","fexpr__67050","reagent_material_ui.styles.with_styles","p__67052","map__67053","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","classes","props","cljs.core/vreset!","bfuncs.style/app-style","theme","map__67107","map__67109","map__67110","map__67111","map__67112","map__67113","rest__67056#","spacing","breakpoints","transitions","mixins","palette","shape","typography","shadows","z-index","break-up","break-down","break-only","break-between","primary","secondary","tertiary","grey","text","action","background","common","divider","error","warning","success","radius","table-border-color","table-border","easing","duration","complex","standard","short","shorter","shortest","create-transition","cljs.core.map","cljs.core/clj->js","essential","main","js/module$node_modules$color$index","obj__27297__auto__","f__27298__auto__","covered","selected","compatible","bfuncs.utils.echol"],"sourcesContent":["(ns bfuncs.style\r\n  (:require\r\n   [\"@material-ui/core/styles\" :as mui-styles]\r\n   [\"color\" :as color]\r\n   [applied-science.js-interop :as j]\r\n   [bfuncs.utils :refer [echol log] :refer-macros [no-resolve]]\r\n   [clojure.string :as str]\r\n   [reagent-material-ui.colors :as colors]\r\n   [reagent-material-ui.styles :as reagent-mui-styles]\r\n   [reagent-material-ui.util :as mutil]\r\n   [reagent.core :as r])\r\n  (:require-macros [bfuncs.style :refer [style defstyles calc]]))\r\n\r\n(defn style-combine [m1 m2]\r\n  (if (and (map? m1) (map? m2))\r\n    (merge-with style-combine m1 m2)\r\n    m2))\r\n\r\n(def theme\r\n  (reagent-mui-styles/responsive-font-sizes\r\n   (reagent-mui-styles/create-mui-theme\r\n    {:palette {:primary colors/indigo\r\n               :secondary colors/light-blue\r\n               ;:tertiary colors/pink\r\n               :tertiary colors/brown\r\n               :action {:active-opacity 0.54\r\n                        :active-light \"rgba(0, 0, 0, 0.15)\"\r\n                        :active-light-opacity 0.15}}\r\n     :typography {:subtitle-1 {:font-size \"1.1rem\"\r\n                               :line-height 1.5}\r\n                  :h-4 {:font-weight 500}\r\n                  :monospace-1 {:font-family [\"Source Code Pro\" \"monospace\"] ;[\"Roboto Mono\" \"monospace\" \"sans\"]\r\n                                :font-weight 400\r\n                                :font-size \"1rem\"\r\n                                :line-height \"normal\"}\r\n                  :monospace-2 {:font-family [\"Source Code Pro\" \"monospace\"]\r\n                                :font-weight 400\r\n                                :font-size \"0.875rem\"\r\n                                :line-height \"normal\"}\r\n                  }})\r\n   {:variants [\"h1\" \"h2\" \"h3\" \"h4\" \"h5\" \"h6\"]}))\r\n\r\n(def !vclasses (volatile! nil))\r\n\r\n(defn- with-styles [styles]\r\n  (fn [component]\r\n    ((reagent-mui-styles/with-styles styles)\r\n     (fn [{:keys [classes] :as props}]\r\n       (vreset! !vclasses classes)\r\n       (component props)))))\r\n\r\n(defn app-style [theme]\r\n  (let [{:keys [spacing breakpoints transitions mixins palette shape typography shadows z-index]} theme\r\n        {break-up :up\r\n         break-down :down\r\n         break-only :only\r\n         break-between :between} breakpoints\r\n        {:keys [primary secondary tertiary grey text action background common divider error warning success]} palette\r\n        {radius :border-radius} shape\r\n        table-border-color (grey 300)\r\n        table-border (str \"1px solid \" table-border-color)\r\n        {:keys [easing duration]} transitions\r\n        {:keys [complex standard short shorter shortest]} duration\r\n        create-transition #(apply (get transitions :create)\r\n                                  (map clj->js %&))\r\n        essential (let [main (color (tertiary :A200))]\r\n                    {:main (-> main (j/call :alpha 0.4) str)\r\n                     :hover (-> main (j/call :alpha 0.5) str)\r\n                     :active (-> main (j/call :alpha 0.7) str)\r\n                     :text \"black\"})\r\n        covered (let [main (color (action :hover))]\r\n                  {:main (j/call main :string)\r\n                   :hover (-> main (j/call :opaquer 0.5) str)\r\n                   :active (action :active-light)})\r\n        selected (let [main (primary :A400)]\r\n                   {:main main\r\n                    :hover (-> main color (j/call :darken 0.1) str)\r\n                    :active (-> main color (j/call :darken 0.3) str)\r\n                    :text (primary :contrast-text)})\r\n        compatible (let [main (color (secondary :A100))]\r\n                     {:main (j/call main :string)\r\n                      :hover (-> main (j/call :darken 0.1) str)\r\n                      :active (-> main (j/call :darken 0.3) str)})]\r\n    (echol :theme theme)\r\n    (no-resolve\r\n     (defstyles\r\n       :chip-container {:display \"flex\"\r\n                        :flex-flow \"row wrap\"\r\n                        :justify-content \"center\"\r\n                        $chip-like {:margin [[0 (spacing 0.5) (spacing 1)]]}}\r\n       :unsetti {:appearance \"unset\" :color \"unset\" :word-spacing \"unset\" :text-rendering \"unset\"\r\n                 :text-transform \"unset\" :text-indent \"unset\" :text-shadow \"unset\" :display \"unset\"\r\n                 :text-align \"unset\" :cursor \"unset\" :align-items \"unset\" :background-color \"unset\"\r\n                 :box-sizing \"unset\" :margin \"unset\" :font \"unset\" :padding \"unset\" :border-width \"unset\"\r\n                 :border-style \"unset\" :border-color \"unset\" :border-image \"unset\"}\r\n       :selectable {:transition (create-transition [\"background-color\" \"box-shadow\" \"color\" \"border-color\"]\r\n                                                   {:duration shortest})\r\n                    :cursor \"pointer\"\r\n                    &:active {:background-color (action :active-light)\r\n                              :box-shadow (shadows 2)}\r\n                    &.covered {:background-color (covered :main)\r\n                               [&:hover &.Mui-focusVisible] {:background-color (covered :hover)}}\r\n                    &.selected {:background-color (selected :main)\r\n                                :color (selected :text)\r\n                                :box-shadow (shadows 1)\r\n                                &:active {:background-color (selected :active)}\r\n                                [&:hover &.Mui-focusVisible] {:background-color (selected :hover)}}\r\n                    [&:hover &.Mui-focusVisible] {:background-color (action :hover)}}\r\n       ;:root {:display \"flex\"}\r\n       :app-bar {:z-index (z-index :app-bar)\r\n                 :background (background :paper)\r\n                 :color (primary :main)}\r\n       :main {:flex-grow 1\r\n              :min-height \"100vh\"\r\n              :width \"100%\"\r\n              :display \"flex\"\r\n              >.main-container {:padding-y (spacing 4)\r\n                                (break-down \"xs\") {:padding-y (spacing 2)}\r\n                                :display \"grid\"\r\n                                :row-gap (spacing 4)\r\n                                :align-content \"flex-start\"\r\n                                >.MuiCard-root {:overflow \"unset\"}\r\n                                }\r\n              }\r\n       :main-grid-item {(break-only \"xs\") {&.MuiGrid-item {:padding-x (spacing 1)}}}\r\n       :essentials-table {:width \"100%\"\r\n                          >table {:align-items \"start\"\r\n                                  :display \"grid\"\r\n                                  :font-size \"1rem\"\r\n                                  :justify-content \"center\"\r\n                                  :grid-template-columns \"auto minmax(60%, auto)\"\r\n                                  tr {:display \"contents\"}\r\n                                  tr:first-child>td {:mixin (typography :body-2)\r\n                                                     :border-bottom table-border\r\n                                                     :padding-y (spacing 1)\r\n                                                     :text-align \"center\"\r\n                                                     :align-items \"center\"\r\n                                                     :line-height 1.5\r\n                                                     :font-weight 500\r\n                                                     :align-self \"stretch\"}\r\n                                  '(tr (:nth-child 2) >td) {:padding-top (spacing 1)}\r\n                                  tbody {:display \"contents\"}\r\n                                  td {:display \"flex\"\r\n                                      :padding [[(spacing 0.5) (spacing 1)]]\r\n                                      &:first-child {}\r\n                                      &:last-child {:border-left table-border\r\n                                                    :width \"100%\"}}\r\n                                  .terms-container {:display \"flex\"\r\n                                                    :flex-flow \"row wrap\"\r\n                                                    :width \"100%\"\r\n                                                    :gap [[(spacing 0.5)\r\n                                                           (spacing 1)]]}\r\n                                  .implicant-container {:display \"flex\"\r\n                                                        :justify-content \"flex-end\"}}}\r\n       :expression {.button-base {:display \"flex\"\r\n                                  :padding [[0 (spacing 2)]]\r\n                                  :font-size \"unset\"\r\n                                  :width \"100%\"}}\r\n       :math-toggle {:text-transform \"unset\"\r\n                     :letter-spacing \"unset\"\r\n                     :font-weight \"unset\"\r\n                     :color \"#444\"\r\n                     :white-space \"nowrap\"\r\n                     :width \"100%\"\r\n                     :min-width (spacing 8)\r\n                     :min-height (spacing 5) ;(spacing 4.5)\r\n                     :padding [[0 (spacing 1.5)]]\r\n                     &.Mui-selected {:color (text :primary)\r\n                                     ;:background-color '(rgba 63 81 181 0.2)\r\n                                     }\r\n                     ;.MuiToggleButton-label {:color (text :primary)}\r\n                     }\r\n       :notification {.close {:padding (spacing 0.5)}}\r\n       :expression-drawer {>.MuiDrawer-paper {:padding [[(+ (spacing 4) 30) (spacing 2) (spacing 2)]]\r\n                                              :border-top-radius (* 2 radius)\r\n                                              >.close-button {:position \"absolute\"\r\n                                                              :top (spacing 2)\r\n                                                              :right (spacing 2)}\r\n\r\n                                              .notification-space {:padding-y 14\r\n                                                                   :visibility \"hidden\"}}\r\n                           }\r\n       :steps {:display \"grid\"}\r\n       :paper {:padding (spacing 2)\r\n               :display \"flex\"\r\n               :overflow \"auto\"\r\n               :flex-direction \"column\"}\r\n       :typesetting-menu\r\n       {.title-and-close {:display \"flex\"\r\n                          ;:color (primary :main)\r\n                          :align-items \"center\"\r\n                          :justify-content \"space-between\"}\r\n\r\n        .drawer-content\r\n        {:padding 0\r\n         :display \"grid\"\r\n         :width 450\r\n         :row-gap (spacing 1)\r\n         :overflow-y \"scroll\"\r\n         :overflow-x \"hidden\"\r\n         :grid-template-columns \"100%\"\r\n         :align-content \"start\"\r\n         :position \"relative\"\r\n         (break-down \"xs\") {:width (calc (- \"100vw\" [(spacing 4) :px]))}\r\n         >* {:padding-x (spacing 2.5)\r\n             &:first-child {:padding-top (spacing 2)}\r\n             &:last-child {:padding-bottom (spacing 2)}}\r\n         >.preview-box {:padding (spacing 2.5)\r\n                        :position \"sticky\"\r\n                        :top -1\r\n                        :border-bottom-radius (* 2 radius)\r\n                        :background (background :paper)\r\n                        :z-index 1\r\n                        :transition (create-transition \"box-shadow\" {:duration shorter})\r\n                        &.stuck {:box-shadow (shadows 3)}\r\n                        >.expression-container {:display \"flex\"\r\n                                                :flex-direction \"column\"\r\n                                                :align-items \"center\"\r\n                                                :justify-content \"center\"\r\n                                                :min-height (calc (+ (* 3 1.05 \"1rem\") [(spacing 4) :px]))\r\n                                                :border table-border\r\n                                                :border-radius radius\r\n                                                :padding-y \"0.5em\"\r\n                                                $expression {:align-self \"center\"\r\n                                                             ;:min-height (calc (+ (* 3 1.05 \"1rem\")\r\n                                                             ;                     \"1em\"))\r\n                                                             :display \"flex\"\r\n                                                             :align-items \"center\"\r\n                                                             :padding-x (spacing 2)\r\n                                                             }}\r\n                        ;>.demo-expression\r\n                        }\r\n         >.section {:display \"grid\"\r\n                    :row-gap (spacing 1)\r\n                    >.section-title {:grid-column \"1 / -1\"\r\n                                     :padding-bottom (spacing 0.5)}\r\n                    >.slider-container {:display \"grid\"\r\n                                        :margin-bottom (spacing 1)\r\n                                        :row-gap (spacing 1)\r\n                                        :padding-x (spacing 0.5)\r\n                                        [.tip-title .tip>li] {:transition (create-transition [\"opacity\" \"visibility\" \"color\"]\r\n                                                                                             {:duration shortest})}\r\n                                        &.tip-visible {[.tip-title .tip>li.active] {:color (primary :dark)}\r\n                                                       .tip>li.inactive {:opacity 1 :visibility \"visible\"}}\r\n                                        .tip-title {:padding-top (spacing 1)}\r\n                                        .tip {:padding-left (spacing 3)\r\n                                              >li {:padding-bottom (spacing 0.5)\r\n                                                   :color (text :primary)\r\n                                                   &.inactive {:color (text :disabled)\r\n                                                               :opacity 0\r\n                                                               :visibility \"hidden\"}}\r\n                                              :pointer-events \"none\"}\r\n                                        '(.MuiSlider-mark\r\n                                          [style *= \"left: 100%;\"]) {:transform '(translateX \"-2px\")}}}}\r\n        .label {:color (text :secondary)\r\n                :display \"inline-flex\"\r\n                :align-items \"flex-end\"}\r\n        .toggle-buttons.constants {(break-down \"xs\") {:grid-column \"1 / -1\"}}\r\n        .actions {:display \"flex\"\r\n                  :flex-flow \"row wrap\"\r\n                  :justify-content \"flex-end\"\r\n                  :padding-bottom (spacing 2)\r\n                  .right-actions {:display \"flex\"\r\n                                  :flex-flow \"row wrap\"}\r\n                  button.ok {:margin-left (spacing 1)\r\n                             :padding-x (spacing 1.5)\r\n                             :min-width (spacing 8)}\r\n                  button.cancel {:padding-x (spacing 1)\r\n                                 :min-width (spacing 8)}\r\n                  button.reset {:justify-self \"flex-start\"\r\n                                :white-space \"nowrap\"\r\n                                :margin-left 0\r\n                                :margin-right \"auto\"\r\n                                :transition (create-transition \"color\" {:duration short})\r\n                                :min-width (spacing 8)\r\n                                :padding-x (spacing 1)}}\r\n\r\n        .toggle-set-wrapper\r\n        {:display \"grid\"\r\n         .toggle-set {:padding 0\r\n                      :display \"grid\"\r\n                      :grid-template-columns \"1fr\"\r\n                      :gap (spacing 1)\r\n                      ;&.non-expanding {:padding-bottom (spacing 2)}\r\n                      ;&.not-expanded>.more-button {:margin-top (- (spacing 1))}\r\n                      :margin-bottom (spacing 1)\r\n                      }\r\n         &.static {:margin-bottom (spacing 1)}\r\n         &.operators {(break-down \"xs\")\r\n                      {.toggle-set\r\n                       {:grid-template-columns '(repeat \"auto-fit\"\r\n                                                        '(minmax [(spacing 10) :px] \"1fr\"))\r\n                        :column-gap (spacing 2)}\r\n                       .MuiToggleButtonGroup-root\r\n                       {:flex-direction \"column\"\r\n                        .MuiToggleButtonGroup-groupedHorizontal$math-toggle\r\n                        {:border-radius radius\r\n                         '(& (:not :last-child)) {:border-bottom-radius 0}\r\n                         '(& (:not :first-child)) {:border-top \"1px solid transparent\"\r\n                                                   :margin-top -1\r\n                                                   :margin-left 0\r\n                                                   :border-top-radius 0\r\n                                                   :border-left-color divider}}}}\r\n\r\n                      }\r\n         >.more-button {:display \"flex\"\r\n                        :justify-content \"flex-end\"\r\n                        :transition (create-transition \"margin-top\")\r\n                        (break-down \"xs\") {:grid-column \"1 / -1\"}\r\n                        }\r\n\r\n         }\r\n        .toggle-button-container {:display \"flex\"\r\n                                  :flex-direction \"column\"}}\r\n       :coverage-table {:font-size \"1rem\"\r\n                        .layout-container {:display \"flex\"\r\n                                           :flex-flow \"row wrap\"\r\n                                           :gap (spacing 1)\r\n                                           :align-content \"flex-start\"}\r\n                        .legend {:place-items \"center\"\r\n                                 :padding-x (spacing 1)\r\n                                 :flex [[1 1 0]]\r\n                                 :max-width \"max-content\"\r\n                                 :column-gap (spacing 0.5)\r\n                                 :display \"grid\"\r\n                                 :grid-template-columns [[(spacing 3) \"auto\"]]\r\n                                 :place-content [[\"start\" \"center\"]]\r\n                                 :row-gap (spacing 1)\r\n                                 .rect {:width (spacing 2)\r\n                                        :height (spacing 2)\r\n                                        &.essential {:background (essential :main)\r\n                                                     :opacity (essential :main-opacity)}\r\n                                        &.covered {:background (covered :main)}}\r\n                                 .hide-essentials-switch {:margin-right 0\r\n                                                          :white-space \"nowrap\"\r\n                                                          :grid-column \"1 / -1\"\r\n                                                          :place-self [[\"center\" \"start\"]]}\r\n                                 .legend-label {:mixin [(typography :body-2)]\r\n                                                :line-height 1\r\n                                                :justify-self \"start\"}\r\n                                 .dot {:width (spacing 2)\r\n                                       :height (spacing 2)\r\n                                       :border-radius \"100%\"\r\n                                       :background (secondary :A400)\r\n                                       :box-shadow (shadows 1)}}\r\n                        mask#selected-col-mask>g.cutout-group\r\n                        {:transition (create-transition \"opacity\" {:duration shortest})\r\n                         :opacity 0\r\n                         &.active {:opacity 1}\r\n                         rect.cutout {:animation (create-transition \"$mosey-on-in\" {:duration shortest})\r\n                                      :animation-name \"$mosey-on-in\"}}\r\n                        .row-label>* {:position \"absolute\"\r\n                                      :top \"50%\"\r\n                                      :left \"50%\"\r\n                                      :transform '(translate \"-50%\" \"-50%\")}\r\n                        .message {:display \"flex\"\r\n                                  :justify-content \"center\"\r\n                                  :text-align \"center\"\r\n                                  :font-style \"italic\"\r\n                                  :align-items \"center\"\r\n                                  :color (text :disabled)\r\n                                  :top 0\r\n                                  :left 0\r\n                                  :right 0\r\n                                  :opacity 0\r\n                                  :fill (text :disabled)\r\n                                  :position \"absolute\"\r\n                                  :pointer-events \"none\"\r\n                                  :user-select \"none\"\r\n                                  :transition (create-transition \"opacity\")\r\n                                  &.all-essential {:bottom 0}\r\n                                  &.visible {:opacity 1}}\r\n                        svg.root-svg {:overflow \"visible\"\r\n                                      circle.dot {:fill (secondary :A400)\r\n                                                  :filter '(drop-shadow [0 \"1px\" \"1px\" '(rgba 0 0 0 0.2)])}\r\n                                      [[.covered .col-rect]] {:fill (action :hover)\r\n                                                              [&:hover &:focus] {:fill (covered :hover)}\r\n                                                              [&:active &.active] {:fill (covered :active)}}\r\n                                      [.row-rect .col-rect] {:rx 0\r\n                                                             :vector-effect \"non-scaling-stroke\"\r\n                                                             :stroke \"transparent\"\r\n                                                             :fill \"transparent\"\r\n                                                             :cursor \"pointer\"\r\n                                                             :stroke-width 1\r\n                                                             &:focus {:filter '(url \"#shadow-1\")\r\n                                                                      :rx radius}\r\n                                                             [&:hover &:focus] {:fill (action :hover)\r\n                                                                                :filter \"none\"}\r\n                                                             [&:active &.active &:active:hover\r\n                                                              &.active:hover] {:fill (action :active-light)\r\n                                                                               :stroke (action :active-light)\r\n                                                                               :rx radius}}\r\n                                      [[g.axis .domain]] {:stroke table-border-color}\r\n                                      [div.row-label .row-label-container circle.dot\r\n                                       .cell-rect] {:pointer-events \"none\"}\r\n                                      .column-label-container {:pointer-events \"none\"}\r\n                                      .essential>.row-rect {:fill (essential :main)\r\n                                                            [&:hover &:focus] {:fill (essential :hover)}\r\n                                                            [&:active &.active &:active:hover\r\n                                                             &.active:hover] {:fill (essential :active)\r\n                                                                              :stroke (essential :main)}}\r\n                                      [g.column\r\n                                       g.row] {[rect div text] {:outline \"none\"\r\n                                                                :transition (create-transition\r\n                                                                             [\"fill\" \"fill-opacity\" \"stroke\" \"color\"\r\n                                                                              \"border-radius\" \"filter\" \"rx\"]\r\n                                                                             {:duration shortest})}}\r\n                                      g.selected {[rect.col-rect\r\n                                                   rect.row-rect] {:fill (selected :main)\r\n                                                                   :stroke (selected :main)\r\n                                                                   :filter '(url \"#shadow-1\")\r\n                                                                   :rx radius\r\n                                                                   [&:hover &:focus] {:fill (selected :hover)}\r\n                                                                   [&:active &.active &:active:hover\r\n                                                                    &.active:hover] {:fill (selected :active)\r\n                                                                                     :filter '(url \"#shadow-2\")}}\r\n                                                  div {:color (selected :text)}\r\n                                                  text {:fill (selected :text)}}}\r\n                        .coverage-table-div {:overflow-x \"auto\"\r\n                                             :overflow-y \"visible\"\r\n                                             :flex 1\r\n                                             :border-radius radius\r\n                                             :position \"relative\"\r\n                                             :align-self \"center\"}\r\n                        [[svg.all-hidden rect]] {:pointer-events \"none\"}}\r\n       :chip-like {:display \"inline-flex\"\r\n                   :width \"fit-content\"\r\n                   :padding-x (spacing 1.5)\r\n                   :min-height (spacing 4)\r\n                   :min-width (spacing 6)\r\n                   :box-sizing \"border-box\"\r\n                   :justify-content \"center\"\r\n                   :align-items \"center\"\r\n                   :border [[1 \"solid\" '(rgba 0 0 0 0.2)]]\r\n                   :border-radius 9999\r\n                   :text-align \"center\"\r\n                   :white-space \"nowrap\"}\r\n       :math-chip {:extends [:chip-like :selectable]\r\n                   :position \"relative\"\r\n                   &:hover {:border-color '(rgba 0 0 0 0.4)}\r\n                   &.selected {&:active {:border-color \"transparent\"\r\n                                         :box-shadow (shadows 2)}}\r\n                   &:focus {:box-shadow (shadows 1)}\r\n                   &:active {:border-color (-> table-border-color\r\n                                               color\r\n                                               (j/call :darken 0.2)\r\n                                               (j/call :string))}\r\n                   &.covered {:border-color table-border-color}\r\n                   * {:pointer-events \"none\"}}\r\n\r\n       :title {:flex-grow 1\r\n               :line-height 2}\r\n       :terms-table {:extends :chip-container\r\n                     ;:display \"flex\"\r\n                     ;:flex-flow \"row wrap\"\r\n                     ;:justify-content \"center\"\r\n                     ;$math-chip {:margin [[0 (spacing 0.5) (spacing 1)]]}\r\n                     }\r\n       :step-icon {;:mixin (typography :caption)\r\n                   :display \"inline-grid\"\r\n                   :justify-content \"center\"\r\n                   :align-content \"center\"\r\n                   :height (spacing 3)\r\n                   :line-height \"normal\"\r\n                   :min-width (spacing 3)\r\n                   :padding-x (spacing 1)\r\n                   :text-transform \"uppercase\"\r\n                   :color (primary :contrast-text)\r\n                   :background (primary :main)\r\n                   :border-radius 500\r\n                   :user-select \"none\"}\r\n\r\n\r\n\r\n       :vars-label {:padding-left (spacing 1)}\r\n       :implications-grid {:padding-y (spacing 1)}\r\n       :steps-card {:position \"relative\"\r\n                    :overflow \"visible\"\r\n                    .MuiCardContent-root {:display \"grid\"\r\n                                          :row-gap (spacing 1)\r\n                                          :grid-template-columns \"100%\"}\r\n                    .example-term {.term-chip {:margin 0}\r\n                                   :align-items \"baseline\"\r\n                                   :align-content \"center\"\r\n                                   .typeset-math:first-child {:text-align \"center\"}\r\n                                   :margin-y \"1em\"\r\n                                   :justify-content \"center\"\r\n                                   .break-group {:display \"flex\"\r\n                                                 :align-items \"baseline\"\r\n                                                 .rel-op {:padding-x (spacing 1)\r\n                                                          &.eq {:padding-right 0}}}\r\n                                   :display \"flex\"\r\n                                   :row-gap (spacing 1)\r\n                                   :flex-flow \"row wrap\"}\r\n                    .dnd-container {:display \"flex\"\r\n                                    :justify-content \"center\"}\r\n                    .thus {:display \"grid\"\r\n                           :grid-template-columns \"auto 1fr\"\r\n                           .original {:grid-column \"1 / -1\"}\r\n                           :align-items \"baseline\"}\r\n                    .dynamic-grid {:display \"grid\"\r\n                                   :justify-items \"center\"\r\n                                   :width \"100%\"\r\n                                   :gap (spacing 1)\r\n                                   &.padded {:padding (spacing 1)}}}\r\n       :gloss {>.gloss-word {:vertical-align \"baseline\"\r\n                             :position \"static\"\r\n                             :cursor \"help\"\r\n                             :text-decoration \"underline dotted\"}}\r\n       :definition-transition {:transform-origin \"0 0 0\"}\r\n       :definition-popper\r\n       {:z-index (z-index :tooltip)\r\n        [['(& [x-placement *= \"bottom\"]) .arrow]] {:top 0\r\n                                                   :left 0\r\n                                                   :margin-top \"-0.71em\"\r\n                                                   :margin-left 4\r\n                                                   :margin-right 4\r\n                                                   &:before {:transform-origin \"0 100%\"}}\r\n        [['(& [x-placement *= \"top\"]) .arrow]] {:bottom 0\r\n                                                :left 0\r\n                                                :margin-bottom \"-0.71em\"\r\n                                                :margin-left 4\r\n                                                :margin-right 4\r\n                                                &:before {:transform-origin \"100% 0\"}}\r\n        [['(& [x-placement *= \"right\"]) .arrow]] {:left 0\r\n                                                  :margin-left \"-0.71em\"\r\n                                                  :height \"1em\"\r\n                                                  :width \"0.71em\"\r\n                                                  :margin-top 4\r\n                                                  :margin-bottom 4\r\n                                                  &:before {:transform-origin \"100% 100%\"}}\r\n        [['(& [x-placement *= \"left\"]) .arrow]] {:right 0\r\n                                                 :margin-right \"-0.71em\"\r\n                                                 :height \"1em\"\r\n                                                 :width \"0.71em\"\r\n                                                 :margin-top 4\r\n                                                 :margin-bottom 4\r\n                                                 &:before {:transform-origin \"0 0\"}}\r\n        .MuiPaper-root {:padding (spacing 2)\r\n                        :margin-x (spacing 2)\r\n                        :max-width 500\r\n                        }\r\n        .arrow {:position \"absolute\"\r\n                :width \"1em\"\r\n                :height \"0.71em\"\r\n                :clip-path '(inset [0 \"-20px\"])\r\n                :box-sizing \"border-box\"\r\n                :color (background :paper)\r\n                &:before {:content \"''\"\r\n                          :margin \"auto\"\r\n                          :display \"block\"\r\n                          :width \"100%\"\r\n                          :height \"100%\"\r\n                          :box-shadow (shadows 2)\r\n                          :background-color \"currentColor\"\r\n                          :transform '(rotate \"45deg\")}}}\r\n       :definition {>.def-body {>em {:font-weight 500\r\n                                     :font-style \"normal\"\r\n                                     }}}\r\n       :fade-collapse {&.MuiCollapse-container\r\n                       {>.MuiCollapse-wrapper>.MuiCollapse-wrapperInner\r\n                        {:transition (create-transition [\"opacity\" \"transform\" \"visibility\"])\r\n                         :position \"relative\"\r\n                         :opacity 1}\r\n                        ['(& [style *= \" height: 0\"])\r\n                         &.MuiCollapse-hidden] {>.MuiCollapse-wrapper>.MuiCollapse-wrapperInner\r\n                                                {:transition-delay 0\r\n                                                 :opacity 0\r\n                                                 :transform '(translateY \"-5px\")}}}}\r\n       :expandable-expression {:display \"grid\"\r\n                               &.closed {:row-gap 0\r\n                                         ;>.details>.MuiCollapse-wrapper>.MuiCollapse-wrapperInner\r\n                                         ;{:transition-delay 0\r\n                                         ; :opacity 0\r\n                                         ; :transform '(translateY \"-5px\")}\r\n                                         }\r\n\r\n                               >.summary {:padding [[0 (spacing 2)]]\r\n                                          :justify-self \"center\"\r\n                                          :font-size \"unset\"\r\n                                          :transition (create-transition \"background-color\")\r\n                                          :border-radius radius\r\n                                          &:hover {:background (action :hover)}}\r\n                               ;>.details>.MuiCollapse-wrapper>.MuiCollapse-wrapperInner\r\n                               #_{:transition (create-transition [\"opacity\" \"transform\"] {:delay 75})\r\n                                  :position \"relative\"}}\r\n       :toolbar {:padding-right 24}\r\n       :variables-dnd {:display \"inline-grid\"\r\n                       :grid-template-columns \"1fr\"\r\n                       :width \"fit-content\"\r\n                       >.columns-container\r\n                       {:display \"grid\"\r\n                        :grid-template-columns '(repeat 3 \"auto\")\r\n                        :justify-content \"center\"\r\n                        :column-gap (spacing 0.5)\r\n                        >.column {:align-items \"center\"\r\n                                  :align-content \"center\"\r\n                                  :display \"flex\"\r\n                                  :flex-direction \"column\"\r\n                                  &.vars {:align-items \"start\"}\r\n                                  &.equals {:align-items \"center\"}\r\n                                  &.headers {:align-items \"end\"}\r\n                                  >* {:height (spacing 4)\r\n                                      :margin-bottom (spacing 1)}\r\n                                  >.draggable-var\r\n                                  {:display \"inline-grid\"\r\n                                   :position \"relative\"\r\n                                   &.dragging>.content {:box-shadow (shadows 3)}\r\n                                   &.drop-animating>.content {:box-shadow \"none\"}\r\n                                   [&:hover &:focus\r\n                                    &.Mui-focusVisible] {:outline \"none\"\r\n                                                         &.dragging>.content {:box-shadow (shadows 3)}\r\n                                                         [&.drop-animating>.content\r\n                                                          >.content] {:box-shadow (shadows 1)}}\r\n                                   >.content {:justify-self \"flex-start\"\r\n                                              :display \"inline-grid\"\r\n                                              :grid-template-columns \"1fr auto\"\r\n                                              :box-sizing \"border-box\"\r\n                                              :align-items \"center\"\r\n                                              :padding-x [(spacing 1.5) (spacing 1)]\r\n                                              :background (background :paper)\r\n                                              :column-gap (spacing 1)\r\n                                              :border [[1 \"solid\" '(rgba 0 0 0 0.2)]]\r\n                                              ;:border-width 1\r\n                                              ;:border-color '(rgba 0 0 0 0.2)\r\n                                              ;:border-style \"solid\"\r\n                                              :border-radius 9999\r\n                                              :white-space \"nowrap\"\r\n                                              :transition (create-transition \"box-shadow\")\r\n                                              >svg {:width 18\r\n                                                    :height 18\r\n                                                    :fill (text :disabled)}\r\n                                              >.var {:min-width (spacing 1.5)\r\n                                                     :text-align \"center\"}}}\r\n                                  [>.header >.equals-sign] {:display \"flex\"\r\n                                                            :align-items \"center\"}}}\r\n                       >.buttons-container {:display \"grid\"\r\n                                            :grid-template-columns \"auto auto\"\r\n                                            :justify-content \"flex-end\"\r\n                                            :column-gap (spacing 1)\r\n                                            ;:padding-x (spacing 1)\r\n                                            '((:nth-child 2) >button) {:transition-delay 50}\r\n                                            button {:transition (create-transition [\"visibility\" \"opacity\"])\r\n                                                    &.hidden {:opacity 0\r\n                                                              :visibility \"hidden\"\r\n                                                              :pointer-events \"none\"}}\r\n                                            >.MuiButton-root {:transition (create-transition [\"background-color\" \"color\"\r\n                                                                                              \"border-color\"]\r\n                                                                                             {:duration short})}}}\r\n       :input-card {.specification-label.Mui-focused {:color (text :secondary)}\r\n                    >.MuiCardContent-root {:extends [:card-content]\r\n\r\n                                           ;:row-gap (spacing 2)\r\n                                           ;:padding (spacing 3)\r\n                                           }\r\n                    .buttons {:display \"flex\"\r\n                              :padding-top (spacing 1)\r\n                              ;:margin-top (spacing -1)\r\n                              :justify-content \"flex-end\"\r\n                              >.go-button {}}}\r\n       :card-header {:padding (spacing 2)}\r\n       :aligned-environment {:display \"grid\"\r\n                             :align-items \"baseline\"\r\n                             :gap [[(spacing 1) (spacing 0.5)]]\r\n                             :grid-template-columns '(repeat 1 \"1fr auto auto auto 1fr\")\r\n                             (break-up \"sm\")\r\n                             {:grid-template-columns '(repeat 2 \"1fr auto auto auto 1fr\")\r\n                              (break-up \"md\")\r\n                              {:grid-template-columns '(repeat 3 \"1fr auto auto auto 1fr\")}}\r\n                             '(>* (:nth-child \"5n+2\")) {:justify-self \"end\"}\r\n                             '(>* (:nth-child \"5n+3\")) {:justify-self \"center\"}\r\n                             '(>* (:nth-child \"5n+4\")) {:justify-self \"start\"}}\r\n       :expressions-table\r\n       {:box-sizing \"border-box\"\r\n        :padding 10\r\n        (break-only \"xs\") {:padding-x 4}\r\n        >.MuiTable-root\r\n        {td {:border-bottom-color table-border-color\r\n             :vertical-align \"baseline\"\r\n             :padding 0\r\n             &.progress-cell {:padding-x (spacing 2)}\r\n             .mock-table-cell {:padding [[\"1em\" (spacing 1)]]}\r\n             .row-label {:white-space \"nowrap\"\r\n                         :line-height \"1.43\"}\r\n             .typeset-expression {.button-base {:cursor \"default\"}}}\r\n         col.label {:width \"25%\"}\r\n         tbody.expandable {.more-less-button-group\r\n                           {:display \"flex\"\r\n                            :width \"100%\"\r\n                            '(& (:not .extra-visible)) {.spacer {:padding-left 30}}\r\n                            '(& (:not .all-visible)\r\n                                :hover) {[>.spacer >.less-wrapper\r\n                                          >.all-wrapper] {:background-color (action :hover)}}\r\n                            .less-wrapper {:border-radius [[radius 0 0 radius]]}\r\n                            .all-wrapper {:border-radius [[0 radius radius 0]]}\r\n                            .spacer {:flex 1\r\n                                     :cursor \"default\"\r\n                                     :display \"inline-flex\"\r\n                                     :justify-content \"center\"\r\n                                     :flex-direction \"row\"\r\n                                     .more {:cursor \"pointer\"\r\n                                            :font-style \"italic\"}}\r\n                            [.less-wrapper .all-wrapper\r\n                             .spacer] {:transition (create-transition \"background-color\")}}}}}\r\n\r\n       :expressions-group\r\n       {>.content {:min-height (calc (+ (* 1.08 1.21 1.2 \"1rem\")\r\n                                        [(spacing 4) :px]\r\n                                        \"1em\"))\r\n                   :display \"grid\"\r\n                   .progress-container {:align-self \"center\"\r\n                                        >.progress-bar {:height 0\r\n                                                        :transition (create-transition \"height\")\r\n                                                        :border-radius 9999\r\n                                                        >.MuiLinearProgress-bar {:border-radius 9999}}\r\n                                        [&.entering &.enter-done] {>.progress-bar {:height 6}}}\r\n                   .MuiList-root.expressions {:box-sizing \"border-box\"\r\n                                              >.MuiListItem-root$expandable-expression\r\n                                              {:justify-content \"stretch\"\r\n                                               ;&:hover {:background (action :hover)}\r\n                                               ;:transition (create-transition \"background-color\")\r\n                                               ;>.summary {&:hover {:background \"none\"}}\r\n                                               :padding-y 0\r\n                                               >.MuiButtonBase-root\r\n                                               {\r\n                                                :box-sizing \"border-box\"\r\n                                                ;:padding-y (spacing 1)\r\n                                                :border-radius 0\r\n                                                :padding-y (spacing 1)\r\n                                                :width \"100%\"\r\n                                                }\r\n                                               &:first-child>.MuiButtonBase-root {:border-top-radius radius}\r\n                                               &:last-child {:border-bottom \"none\"\r\n                                                             >.MuiButtonBase-root {:border-bottom-radius radius}}\r\n                                               $copy-panel {:padding-bottom 0\r\n                                                            >.row {:margin-bottom (spacing 2)}}}\r\n                                              }}\r\n        }\r\n\r\n       :bool-valued {'(& [data-boolval = \"true\"]) {:fill (primary :main)\r\n                                                   :background-color (primary :main)\r\n                                                   :color (primary :contrast-text)\r\n                                                   }\r\n                     '(& [data-boolval = \"false\"]) {:fill (action :hover)\r\n                                                    :background-color (action :hover)\r\n                                                    :color (text :primary)\r\n                                                    }\r\n                     '(& [data-boolval = \"undefined\"]) {:fill (tertiary :A400)\r\n                                                        :background-color (tertiary :A400)\r\n                                                        :color (common :white)\r\n                                                        }\r\n                     }\r\n\r\n       :expressions-table-button-group\r\n       {:position \"relative\"\r\n        :display \"grid\"\r\n        :width \"100%\"\r\n        :align-items \"center\"\r\n        :grid-template-columns \"auto auto 1fr auto auto\"\r\n        &:last-child {:border-bottom-radius radius}\r\n        '(& (:not .all-visible) :hover) {:background (action :hover)\r\n                                         :cursor \"pointer\"}\r\n\r\n        :column-gap (spacing 1)\r\n        :padding-x (spacing 1)\r\n        >.spacer {:height (spacing 4)\r\n                  :position \"initial\"\r\n                  >.label {\r\n                           :text-align \"center\"\r\n                           :font-style \"italic\"}}\r\n        :transition (create-transition \"background-color\")\r\n        }\r\n\r\n       ;:truth-table {:max-height 580\r\n       ;              :border-radius radius\r\n       ;              >.MuiTable-root {[&>thead>tr\r\n       ;                                &>tbody>tr] {&.true {:background-color (grey 50)}\r\n       ;                                             &>th.MuiTableCell-stickyHeader {:background-color \"white\"}}\r\n       ;                               th {:overflow-x \"auto\"}}}\r\n       :truth-table\r\n       {&.small {rect.datum {:rx 2}}\r\n        rect.datum {:rx radius\r\n                    :transition (create-transition \"fill\"\r\n                                                   {:duration shorter})\r\n                    :extends :bool-valued\r\n                    '(&.output [data-boolval = \"true\"]) {:fill (secondary :A400)}}\r\n        >.chunks {>svg.chunk {:overflow \"auto\"}\r\n                  .tick {>text {:mixin (typography :caption)}}\r\n                  }\r\n\r\n        ;&.medium {>svg.inserted-svg {.tick {>text {:mixin (typography caption)}} }}\r\n        }\r\n       :step {:display \"grid\"\r\n              :grid-template-rows \"auto auto\"\r\n              :grid-template-columns \"auto 1fr 24px\"\r\n              :row-gap (- (spacing 1) 3)\r\n              :column-gap (spacing 1)\r\n              :transition (create-transition \"row-gap\")\r\n              &.open {.step-opener>* {:transform '(rotate \"-180deg\")}}\r\n              &.non-collapsable {:row-gap 0}\r\n              &.collapsable {>.step-summary {:cursor \"pointer\"\r\n                                             :color (text :secondary)}}\r\n              &.closed {:row-gap 0\r\n                        .step-content>.MuiCollapse-wrapper {:opacity 0}}\r\n              &.last {.liney {:visibility \"hidden\"}}\r\n              &.result {.step-content {:grid-column \"1 / -1\"}}\r\n              >.icon-and-line {:display \"flex\"\r\n                               :flex-direction \"column\"\r\n                               :padding-top 3\r\n                               :grid-row \"1 / 3\"\r\n                               >.liney-box {:flex [[1 1 0]]\r\n                                            :overflow \"hidden\"\r\n                                            :padding-bottom (- (spacing 1) 3)\r\n                                            >.liney {:width 24\r\n                                                     :height \"100%\"\r\n                                                     :padding-top (spacing 1)\r\n                                                     >line {:stroke (text :secondary)}\r\n                                                     (break-down \"xs\") {:visibility \"hidden\"}}}\r\n                               (break-down \"xs\") {:grid-row \"1 / 2\"}}\r\n              >.step-summary {:padding-top 3\r\n                              :display \"grid\"}\r\n              >.step-opener {:align-self \"start\"\r\n                             :justify-self \"flex-end\"\r\n                             >* {:transition (create-transition \"transform\")}}\r\n              >.step-content {:grid-column \"2 / -2\"\r\n                              >.MuiCollapse-wrapper {:transition (create-transition \"opacity\")\r\n                                                     :padding-bottom (- (spacing 1) 3)}\r\n                              (break-down \"xs\") {:grid-column \"1 / -1\"\r\n                                                 :padding-x (spacing 1)}}\r\n              (break-down \"xs\") {:padding-x 0}}\r\n       :math {:position \"relative\"\r\n              :font-size \"1rem\"\r\n              &.display {:display \"block\"\r\n                         :width \"100%\"\r\n                         :text-align \"center\"}}\r\n\r\n       :copy-panel {:align-items \"baseline\"\r\n                    :padding [[(spacing 1) (spacing 3)]]\r\n                    >.row {:display \"flex\"\r\n                           '(& (:not :last-child)) {:margin-bottom (spacing 1)}\r\n                           >.copy-field {:padding 0\r\n                                         :flex 1\r\n                                         :margin-right (spacing 1)\r\n                                         :align-self \"baseline\"\r\n                                         :background (background :paper)\r\n                                         >.copy-field-input {:padding (spacing 0.5)\r\n                                                             >textarea {:mixin (typography :monospace-2)}}}\r\n                           >.label {:text-align \"right\"\r\n                                    :margin-right (spacing 1)\r\n                                    :grid-column-start 1\r\n                                    ;:width (spacing 6)\r\n                                    :align-self \"baseline\"\r\n                                    :position \"relative\"\r\n                                    &:before {:content \"'LaTeX'\"\r\n                                              :visibility \"hidden\"}\r\n                                    >span {:position \"absolute\"\r\n                                           :right 0}}\r\n                           >.copy-button {:grid-column-start 3\r\n                                          :width (spacing 3)\r\n                                          :margin-top -3\r\n                                          :align-self \"flex-start\"}}\r\n                    (break-down \"xs\") {:padding (spacing 1)\r\n                                       :grid-template-columns \"auto 1fr\"\r\n                                       :grid-auto-flow \"row dense\"\r\n                                       :align-items \"center\"\r\n                                       >.copy-field {:margin-bottom (spacing 1)}\r\n                                       >.label {:grid-column-start 1\r\n                                                :text-align \"left\"}\r\n                                       >.copy-button {:grid-column-start 2\r\n                                                      :justify-self \"flex-end\"}\r\n                                       '(>.row (:not :last-child)) {:margin-bottom (spacing 2)}}}\r\n       :card-content {:padding (spacing 3)\r\n                      :row-gap (spacing 2)\r\n                      (break-down \"xs\") {:padding (spacing 2)\r\n                                         :row-gap (spacing 1)}\r\n\r\n                      }\r\n       :prime-implicant-table-container {:position \"relative\"}\r\n       :radial-chart\r\n       {:display \"grid\"\r\n        :grid-template-columns \"auto auto\"\r\n        :column-gap (spacing 2)\r\n        :justify-content \"center\"\r\n        :place-items \"center\"\r\n        >.chart-container\r\n        {:position \"relative\"\r\n         :width \"fit-content\"\r\n         svg.chart {.sector-arc {:extends :bool-valued}}\r\n         .center-label {:mixin (typography :h-3)\r\n                        :text-align \"center\"\r\n                        :text-anchor \"middle\"\r\n                        :alignment-baseline \"middle\"\r\n                        :position \"absolute\"\r\n                        :top \"50%\"\r\n                        :left \"50%\"\r\n                        :transform \"translate(-50%, -50%)\"\r\n                        :display \"grid\"\r\n                        >.value.exact {}\r\n                        >.value.approx {:font-size \"1.70rem\"\r\n                                        ;:display \"flex\"\r\n                                        :position \"relative\"\r\n                                        :align-items \"baseline\"\r\n                                        :white-space \"nowrap\"\r\n                                        .mult-sign {:margin-x \"0.1em\"}\r\n\r\n                                        .tilde {:color (text :secondary)}\r\n                                        }\r\n                        .unit {:mixin (typography :body-1)\r\n                               :color (text :secondary)}\r\n                        }\r\n         }\r\n        >.legend {:display \"grid\"\r\n                  :row-gap (spacing 1)\r\n                  :grid-template-columns \"repeat(4, auto)\"\r\n                  :align-items \"center\"\r\n                  :column-gap (spacing 1)\r\n                  :mixin (typography :body-1)\r\n                  .value {:white-space \"nowrap\"\r\n                          :display \"inline-block\"\r\n                          :justify-self \"flex-end\"}\r\n                  .icon {:extends :bool-valued\r\n                         :width (spacing 3)\r\n                         :mixin (typography :body-1)\r\n                         :height (spacing 3)\r\n                         :border-radius radius\r\n                         ;:display \"grid\"\r\n                         ;:place-items \"center\"\r\n                         }\r\n\r\n                  }}\r\n       :reduction-steps-table\r\n       {:padding 1\r\n        .pagination.main {:overflow \"visible\"}\r\n        >.MuiTable-root\r\n        {:border-collapse \"separate\"\r\n         >.MuiTableBody-root\r\n         {:position \"relative\"\r\n          &:first-of-type {.title-cell {:padding-top 0}}\r\n          >.head-row {:vertical-align \"bottom\"\r\n                      >* {:line-height \"normal\"}\r\n                      >.group-cell {:padding-x 0\r\n                                    :white-space \"nowrap\"\r\n                                    :text-align \"center\"\r\n                                    :line-height \"normal\"}\r\n                      >.var-cell {:overflow-x \"hidden\"}}\r\n          >.group-row {>.group-row-rest {:height 0\r\n                                         :padding 0\r\n                                         :border-bottom \"none\"\r\n                                         :visibility \"hidden\"}\r\n                       >.group-cell {:z-index 1\r\n                                     :position \"relative\"\r\n                                     :padding 0\r\n                                     >.group-val {:width 40\r\n                                                  :overflow-x \"hidden\"\r\n                                                  :text-align \"center\"}}}\r\n          >.data-row {:transform '(translate 0)\r\n                      :cursor \"pointer\"\r\n                      :z-index 0\r\n                      :position \"relative\"\r\n                      :height \"100%\"\r\n                      &:after {:content \"''\"\r\n                               :position \"absolute\"\r\n                               :left 40\r\n                               :right 0\r\n                               :top 0\r\n                               :bottom 0\r\n                               :border-x \"1px solid transparent\"\r\n                               :transition (create-transition [\"background-color\" \"box-shadow\" \"z-index\"\r\n                                                               \"border-color\" \"border-radius\"]\r\n                                                              {:duration shortest})}\r\n                      &.selected {:z-index 1\r\n                                  &>td {:color (selected :text)\r\n                                        :border-color \"transparent\"}\r\n                                  &:after {:background (selected :main)\r\n                                           :box-shadow (shadows 1)\r\n                                           :border-color \"transparent\"\r\n                                           :border-radius radius}\r\n                                  [&:hover &:focus] {&:after {:background (selected :hover)\r\n                                                              :border-color \"transparent\"}}\r\n                                  [&.active &:active] {[&:hover &:focus &] {&:after {:background (selected :active)\r\n                                                                                     :box-shadow (shadows 2)}}}}\r\n                      &.compatible {&:after {:background (essential :main)\r\n                                             :border-x-color table-border-color}\r\n                                    [&:hover &:focus] {&:after {:background (essential :hover)\r\n                                                                :border-radius radius}}\r\n                                    [&.active &:active] {[&:hover &:focus &] {&:after {:background (essential :active)\r\n                                                                                       :box-shadow (shadows 2)\r\n                                                                                       :border-radius radius}}}}\r\n                      [&:hover &:focus] {&:after {:background (action :hover)\r\n                                                  :border-x-color table-border-color\r\n                                                  :border-radius radius}}\r\n                      &:focus {:z-index 3\r\n                               &:after {:box-shadow (shadows 1)}\r\n                               >td {:border-color \"transparent\"}}\r\n                      [&.covered-by-selected\r\n                       &.covers-selected] {&:after {:background (covered :main)\r\n                                                    :border-color table-border-color}\r\n                                           [&:hover &:focus] {&:after {:background (covered :hover)\r\n                                                                       :border-radius radius}\r\n                                                              &:active:after {:background (covered :active)}}\r\n                                           [&.active:after &:active:after] {:background (covered :active)}}\r\n                      [&:active &.active] {[&:hover &:focus &] {:z-index 1\r\n                                                                &:after {:background (action :active-light)\r\n                                                                         :box-shadow (shadows 2)\r\n                                                                         :border-color \"transparent\"\r\n                                                                         :border-radius radius}\r\n                                                                >td {:border-color \"transparent\"}}}\r\n                      &.nothing>td {:color (text :secondary)}\r\n                      >td {:position \"relative\"\r\n                           :transition (create-transition [\"color\" \"border-color\" \"z-index\" \"opacity\" \"font-weight\"]\r\n                                                          {:duration shortest})\r\n                           :z-index 3\r\n                           :pointer-events \"none\"\r\n                           '(& (:nth-child \"n+3\")) {:text-align \"center\"}}\r\n                      span.dash {:font-weight 500}}}\r\n         .title-cell {:border \"none\"\r\n                      :padding-top (spacing 2)\r\n                      :padding-x 0}\r\n         .group {:width 64}\r\n         .terms {:width \"100%\"\r\n                 :border-right \"1px solid\"\r\n                 :border-right-color (grey 300)}\r\n         .title {:border \"none\"\r\n                 :display \"flex\"\r\n                 :align-items \"baseline\"\r\n                 :align-content \"center\"}\r\n         .MuiTableFooter-root {td {:border-bottom \"none\"}}\r\n         .pagination {.MuiTablePagination-toolbar {:padding-left 2\r\n                                                   :flex-wrap \"wrap\"\r\n                                                   :justify-content \"flex-end\"}\r\n                      &.mini {:flex-grow 1\r\n                              :justify-self \"flex-end\"\r\n                              [.MuiTablePagination-spacer\r\n                               .MuiTablePagination-caption] {:display \"none\"}}}\r\n         .star-cell {:width 10\r\n                     :padding-x [(spacing 1) 0]}\r\n         .vars {:width \"fit-content\"}\r\n         .star {:width 10\r\n                :min-width \"unset\"}\r\n         (break-down \"xs\") {td {:padding-x (spacing 1)\r\n                                '(& (:not .pagination)\r\n                                    (:not .title-cell)\r\n                                    :last-child) {:padding-right (spacing 1)}}}}}\r\n       :vertical-grid {:display \"grid\"\r\n                       :row-gap (spacing 1)\r\n                       :grid-template-columns \"1fr\"}\r\n       :input-section {:display \"grid\"\r\n                       :row-gap (spacing 2)\r\n                       >.terms-section\r\n                       {>.title {:color (text :secondary)\r\n                                 :margin-bottom (spacing 1)}\r\n                        >.terms-container {:display \"flex\"\r\n                                           :flex-flow \"row wrap\"\r\n                                           :justify-content \"flex-start\"\r\n                                           .term {:mixin (typography :body-2)\r\n                                                  '(& (:not :last-child) :after)\r\n                                                  {:content \"','\"\r\n                                                   :display \"inline-block\"\r\n                                                   :margin-right \"0.3em\"}}}}\r\n                       }\r\n       :expression-input {:extends :input-section\r\n                          [>.variables-section >.expression-section]\r\n                          {>.title {:color (text :secondary)\r\n                                    :margin-bottom (spacing 1)}\r\n                           >.variables-container {:display \"flex\"\r\n                                                  :flex-flow \"row wrap\"\r\n                                                  :justify-content \"center\"\r\n\r\n                                                  $chip-like\r\n                                                  {:margin [[0 (spacing 1) (spacing 1) 0]]}}}\r\n                          }\r\n       :minterms-input {:extends :input-section\r\n\r\n                        ; INVALID {$ [a-zA-Z0-9_] +}\r\n                        }\r\n       :maxterms-input {:extends :input-section}\r\n       :editor-field\r\n       {:position \"relative\"\r\n        :box-sizing \"border-box\"\r\n        &:hover>.cm-editor {:border-color '(rgba 0 0 0 0.87)}\r\n        &.has-errors.show-errors {&:hover>.cm-editor {:border-color (error :main)}\r\n                                  >.cm-editor {:border-color (error :main)}}\r\n        >.cm-editor\r\n        {:border-radius radius\r\n         :border-width 1\r\n         :border-style \"solid\"\r\n         :border-color '(rgba 0 0 0 0.23)\r\n         :position \"relative\"\r\n         :padding (spacing 0.5)\r\n         :color (text :secondary)\r\n         :transition (create-transition \"border-color\" {:duration shorter})\r\n         &.cm-wrap {:height \"100%\"}\r\n         &.cm-focused {:border-color (primary :main)\r\n                       :padding (dec (spacing 0.5))\r\n                       :outline \"none\"\r\n                       :border-width 2}\r\n         >.cm-scroller {:overflow \"auto\"\r\n                        >.cm-content {:mixin (typography :monospace-2)}}}\r\n        .cmt-operator {:color (primary :A700)}\r\n        .cmt-operator-keyword {:font-style \"italic\"}\r\n        .cmt-rel-op {:color (secondary :A400)}\r\n        .cmt-bool {:color (text :primary)\r\n                   :font-weight \"bold\"}\r\n        .cmt-negated {:color (tertiary :A400)}\r\n        .cmt-variableName {:color (text :primary)}\r\n        .cmt-number {:color (primary :A700)}\r\n        #_#_*::selection {;:color [[\"white\" ] :!important]\r\n                          :background-color '(rgba 215 212 240 0.55)}\r\n        #_#_.cm-selectionM {:background-color [[;'(rgba 215 212 240 0.55)\r\n                                                \"blue\"\r\n                                                ] \"!important\"]\r\n                            :color [[\"white\"] \"!important\"]}\r\n        .cm-matchingBracket {:background-color (tertiary 50)\r\n                             :color \"inherit\"}\r\n        .cm-nonmatchingBracket {:color (error :main)}\r\n        .cm-markedVar {:background-color (secondary 100)\r\n                       :border-radius radius}\r\n        .cm-parseError {:color (error :contrast-text)\r\n                        :background-color (error :main)}\r\n        .cm-duplicateTerm {:border-radius radius\r\n                           :background-color (warning :light)\r\n                           &.index-0 {;:color (warning :contrast-text)\r\n                                      :background-color (warning :light)}\r\n                           &.index-1 {;:color (success :contrast-text)\r\n                                      :background-color (success :light)\r\n                                      }\r\n                           &.index-2 {;:color (success :contrast-text)\r\n                                      :background-color (error :light)\r\n                                      }\r\n                           }\r\n        .cm-zeroWidthErrorLeft {:position \"relative\"\r\n                                &:before {:content \"''\"\r\n                                          :position \"absolute\"\r\n                                          :width 2\r\n                                          :left -1\r\n                                          :background (error :main)\r\n                                          :height \"100%\"\r\n                                          :pointer-events \"none\"\r\n                                          :z-index -1}}\r\n        .cm-zeroWidthErrorRight {:position \"relative\"\r\n                                 &:after {:content \"''\"\r\n                                          :position \"absolute\"\r\n                                          :width 2\r\n                                          :right -1\r\n                                          :background (error :main)\r\n                                          :height \"100%\"\r\n                                          :pointer-events \"none\"\r\n                                          :z-index -1}}}\r\n\r\n       :terms-field {>.cm-editor.cm-wrap {:max-height (spacing 32)}\r\n                     }\r\n\r\n       :expression-field {>.cm-editor.cm-wrap {:min-height (spacing 24)\r\n                                               :max-height (spacing 32)}}\r\n\r\n       :input-variable {:transition (create-transition [\"background-color\" \"box-shadow\" \"border-color\"]\r\n                                                       {:duration short})\r\n                        &:active {:box-shadow (shadows 1)}\r\n                        [&:hover &.Mui-focusVisible] {:background (action :hover)\r\n                                                      :border-color '(rgba 0 0 0 0.3)}\r\n                        &.selected {:background (action :selected)\r\n                                    :border-color '(rgba 0 0 0 0.3)}}\r\n\r\n       :calibration {:padding (spacing 2)\r\n                     :font-size \"1rem\"\r\n                     :margin-bottom (spacing 1)\r\n                     span.label {:margin-right (spacing 1)\r\n                                 :font-weight 500\r\n                                 :user-select \"none\"}}\r\n       \"@keyframes flood-fade\" {:from {:flood-opacity 0}\r\n                                :to {:flood-opacity 1}}\r\n       \"@keyframes mosey-on-in\" {:from {:opacity 0}\r\n                                 :to {:opacity 1}}\r\n       \"@global\"\r\n       {body {:overflow-y \"scroll\"\r\n              .dragging>* {:pointer-events \"none\"}}\r\n        button {:all \"unset\"}\r\n        .katex {:font-size \"1.08em\"}\r\n        .katex-display {:margin \"0.5em 0\"\r\n                        >.katex {:white-space \"normal\"}\r\n                        >.base {:margin \"2.5em 0\"}}\r\n        .MuiTypography-root {>$math>.katex {.punct {:mixin (typography :body-1)}}\r\n                             [>span >em >i] {'(& (:nth-last-child \"n+1\") :after) {:content \"' '\"}\r\n                                             '(& (:nth-child \"n+1\") :before) {:content \"' '\"}}\r\n                             $math {:font-size \"unset\"}}\r\n        [.MuiRadio-root\r\n         .MuiFormLabel-root] {:transition (create-transition [\"color\" \"background-color\"]\r\n                                                             {:duration shortest})}}))))\r\n"]}