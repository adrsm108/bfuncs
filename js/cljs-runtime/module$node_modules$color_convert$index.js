shadow$provide.module$node_modules$color_convert$index=function(global,require,module,exports){function wrapRaw(fn){var wrappedFn=function(args){if(void 0===args||null===args)return args;1<arguments.length&&(args=Array.prototype.slice.call(arguments));return fn(args)};"conversion"in fn&&(wrappedFn.conversion=fn.conversion);return wrappedFn}function wrapRounded(fn){var wrappedFn=function(args){if(void 0===args||null===args)return args;1<arguments.length&&(args=Array.prototype.slice.call(arguments));
var result=fn(args);if("object"===typeof result)for(var len=result.length,i=0;i<len;i++)result[i]=Math.round(result[i]);return result};"conversion"in fn&&(wrappedFn.conversion=fn.conversion);return wrappedFn}var conversions=require("module$node_modules$color_convert$conversions"),route=require("module$node_modules$color_convert$route"),convert={};Object.keys(conversions).forEach(function(fromModel){convert[fromModel]={};Object.defineProperty(convert[fromModel],"channels",{value:conversions[fromModel].channels});
Object.defineProperty(convert[fromModel],"labels",{value:conversions[fromModel].labels});var routes=route(fromModel);Object.keys(routes).forEach(function(toModel){var fn=routes[toModel];convert[fromModel][toModel]=wrapRounded(fn);convert[fromModel][toModel].raw=wrapRaw(fn)})});module.exports=convert}
//# sourceMappingURL=module$node_modules$color_convert$index.js.map
