{
"version":3,
"file":"module$node_modules$color_string$index.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/color-string/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$color_string$index\"] = function(global,require,module,exports) {\n/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\n\nvar reverseNames = {};\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (colorNames.hasOwnProperty(name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar keyword = /(\\D+)/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\n\t\tif (!rgb) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = (parseFloat(match[1]) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = num.toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","clamp","num","min","max","Math","hexDouble","str","toString","toUpperCase","length","colorNames","swizzle","reverseNames","name","hasOwnProperty","cs","to","get","cs.get","string","substring","prefix","toLowerCase","val","hsl","model","hwb","rgb","value","cs.get.rgb","abbr","rgba","per","keyword","match","hex","hexAlpha","i","i2","parseInt","slice","parseFloat","round","cs.get.hsl","alpha","h","s","l","a","isNaN","cs.get.hwb","w","b","cs.to.hex","arguments","cs.to.rgb","percent","cs.to.rgb.percent","r","g","cs.to.hsl","hsla","cs.to.hwb","hwba","cs.to.keyword"]
}
