{"version":3,"sources":["bfuncs/glossary.cljs"],"mappings":"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","names":["var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","bfuncs.glossary/definition","p__68190","map__68191","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","seq68187","G__68188","cljs.core/first","cljs.core/next","self__4723__auto__","title","examples","body","reagent-material-ui.core.paper/paper","reagent.core.class_names","cljs.core/deref","bfuncs.style/!vclasses","reagent-material-ui.core.typography/typography","cljs.core.into","bfuncs.glossary/definition-fn","key","props","reagent.core.create_element","js/module$node_modules$$material_ui$core$esm$Grow$index.default","js/Object.assign","obj68210","k68211","obj68214","applied-science.js-interop.impl/in?*","js/undefined","obj68220","obj68218","k68219","obj68223","k68221","obj68227","reagent.core.as_element","G__68231","G__68232","bfuncs.glossary/definitions","bfuncs.glossary/gloss","text","with-let68241","reagent.ratom/with-let-values","temp__5739__auto__","reagent.ratom/*ratom-context*","c__27840__auto__","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","init68242","res__27841__auto__","!anchor","reagent.core.atom","reagent-material-ui.core.link/link","e","p1__68236#","cljs.core.swap_BANG_","obj68249","k68250","obj68252","reagent-material-ui.core.click-away-listener/click-away-listener","cljs.core/reset!","anchor","reagent-material-ui.core.popper/popper","goog.dom/getElement","reagent.core.track","bfuncs.typesetting/$","bfuncs.typesetting.__GT_latex","bfuncs.algebra/!"],"sourcesContent":["(ns bfuncs.glossary\r\n  (:require\r\n   [applied-science.js-interop :as j]\r\n   [bfuncs.style :refer [classes]]\r\n   [clojure.string :as str]\r\n   [goog.string :as gstr]\r\n   [bfuncs.utils :refer [echo ;definition\r\n                         ]]\r\n   [bfuncs.typesetting :refer [$ $$ ->latex expression]]\r\n   [bfuncs.algebra :refer [&& || !]]\r\n   [reagent-material-ui.core.popper :refer [popper]]\r\n   [reagent-material-ui.core.link :refer [link]]\r\n   [reagent-material-ui.core.typography :refer [typography]]\r\n   [reagent-material-ui.core.button :refer [button]]\r\n   [reagent-material-ui.core.grow :refer [grow]]\r\n   [reagent-material-ui.core.paper :refer [paper]]\r\n   [reagent-material-ui.core.click-away-listener :refer [click-away-listener]]\r\n   [reagent-material-ui.core.tooltip :refer [tooltip]]\r\n   [goog.dom :as gdom]\r\n   [reagent-material-ui.core.box :refer [box]]\r\n   [\"@material-ui/core/Grow\" :default MuiGrow]\r\n   [\"@material-ui/core/Fade\" :default MuiFade]\r\n   [\"@material-ui/core/Popper\" :default MuiPopper]\r\n   [reagent.core :as r :refer-macros [with-let]]\r\n   [react :as react]))\r\n\r\n(declare definitions)\r\n\r\n(defn- definition [{:keys [title examples]} & body]\r\n  [:div.shit\r\n   [:span.arrow]\r\n   [paper {:elevation 3\r\n           :class (classes :definition)}\r\n    (when title\r\n      [typography {:variant \"h5\"\r\n                   :class \"def-title\"\r\n                   :gutter-bottom true}\r\n       title])\r\n    (into [typography {:variant \"body1\"\r\n                       :component \"div\"\r\n                       :class \"def-body\"}]\r\n          body)]])\r\n\r\n(defn- definition-fn [key]\r\n  (fn [props]\r\n    (r/create-element MuiGrow\r\n                      (js/Object.assign\r\n                       #js {:style #js {:transformOrigin \"50% 0 0\"}}\r\n                       (j/get props :TransitionProps)\r\n                       (when (j/get-in props [:TransitionProps :in])\r\n                         #js {:timeout 100}\r\n                         #js {})\r\n                       )\r\n                      (r/as-element (definitions key [:div \"No definition found\"])))))\r\n\r\n(defn gloss\r\n  ([key text]\r\n   (r/with-let [!anchor (r/atom nil)]\r\n     [:span {:class (classes :gloss)}\r\n      [link {:class \"gloss-word clicky\"\r\n             :variant \"inherit\"\r\n             :component \"button\"\r\n             :color \"secondary\"\r\n             :on-click (fn [e]\r\n                         (swap! !anchor #(when-not % (j/get e :currentTarget))))}\r\n       text]\r\n      [click-away-listener {:on-click-away #(reset! !anchor nil)}\r\n       (let [anchor @!anchor]\r\n         [popper {:open (some? anchor)\r\n                  :anchor-el anchor\r\n                  :transition true\r\n                  :disable-portal true\r\n                  :class (classes :definition-popper)\r\n                  :modifiers {:prevent-overflow {:enabled true\r\n                                                 :boundaries-element (gdom/getElement \"steps-card\")\r\n                                                 :padding 0}\r\n                              :flip {:enabled false}\r\n                              :arrow {:enabled true\r\n                                      :element \".arrow\"}\r\n                              :offset {:enabled true\r\n                                       :offset \"0, 4\"}}}\r\n          @(r/track definition-fn key)])]])))\r\n\r\n(def definitions\r\n  {:literal\r\n   [definition {:title \"Literal\"}\r\n    \"A variable\" [$ \"x\" \",\"] \"or its complement\" [$ (->latex (! \"x\")) \".\"]]\r\n   :implicant\r\n   [definition {:title \"Implicant\"}\r\n    \"An\" [:em \"implicant\"] [$ \"X\"] \"of a boolean function\" [$ \"F\"] \"is a conjunction (product) of\"\r\n    [gloss :literal \"literals\"] \"where\"\r\n    [$ \"{X \\\\implies F}\" \".\"]]\r\n   :implicate\r\n   [definition {:title \"Implicate\"}\r\n    \"An\" [:em \"implicate\"] [$ \"Y\"] \"of a boolean function\" [$ \"F\"] \"is a disjunction (sum) of\"\r\n    [gloss :literal \"literals\"] \"where\"\r\n    [$ \"{F \\\\implies Y}\" \".\"]\r\n    #_[$ (str \"{\" (->latex (! \"Y\")) \" \\\\implies \" (->latex (! \"F\")) \"}\") \".\"]]\r\n   :cover-sop\r\n   [definition {:title \"Coverage (Implicant)\"}\r\n    \"Implicant\" [$ \"X_1\"] \"is said to\" [:em \"cover\"] \"implicant\" [$ \"X_2\"]\r\n    \"if\" [$ \"{X_2 \\\\implies X_1}\" \".\"]]\r\n   :cover-pos\r\n   [definition {:title \"Coverage (Implicate)\"}\r\n    \"Implicate\" [$ \"Y_1\"] \"is said to\" [:em \"cover\"] \"implicate\" [$ \"Y_2\"]\r\n    \"if\"\r\n    [$ \"{Y_1 \\\\implies Y_2}\" \".\"]]\r\n   })\r\n"]}